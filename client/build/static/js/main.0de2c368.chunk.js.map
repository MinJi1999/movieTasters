{"version":3,"sources":["_actions/types.js","apiClient.js","_actions/user_action.js","components/views/Login/Login.js","components/utils/notify/Notify.js","components/views/Register/Register.js","components/utils/genresArray.js","components/utils/genreCheckbox/GenreCheckbox.js","components/views/Main/Main.js","components/utils/fileUpload/FileUpload.js","components/views/PostUpload/PostUpload.js","components/views/PostUpdate/PostUpdate.js","components/views/Detail/Detail.js","components/views/MbtiRecommend/MbtiRecommend.js","components/utils/modal/Modal.js","components/views/aboutMember/myHome/myHome.js","components/views/aboutMember/myInfo/MyInfo.js","components/layout/header/Header.js","components/layout/header/HeaderForHome.js","components/layout/footer/Footer.js","components/layout/Layout.js","hoc/Auth.js","App.js","_reducers/index.js","_reducers/user_reducer.js","index.js"],"names":["LOGIN_USER","REGISTER_USER","AUTH_USER","LOGOUT_USER","SAVE_POST","SAVE_USER","GET_POST_BY_ID","apiClient","axios","create","baseURL","withCredentials","timeout","USER_PATH","POST_PATH","auth","request","get","then","res","data","type","payload","getPostById","id","Login","props","dispatch","useDispatch","React","useState","setId","password","setPassword","className","onSubmit","e","preventDefault","post","loginUser","loginSuccess","history","push","alert","message","htmlFor","value","onChange","currentTarget","onClick","Notify","visible","text","Register","setVisible","modalText","setModalText","name","setName","nickname","setNickname","birthYear","setBirthYear","mbti","setMbti","registerUser","success","setTimeout","err","keyPattern","catch","placeholder","genres","chartColor","GenreCheckbox","genre","setGenre","useEffect","checkedGenre","handleFilter","genreRender","map","item","index","checked","setCheckedGenreTrue","filter","genreHandler","Main","postDatas","setPostDatas","setCheckedGenre","renderPost","date","moment","updatedAt","format","_id","postTitle","length","slice","writer","movieTitle","border","width","height","align","style","padding","director","join","actor","src","images","alt","body","filteredGenre","filteredPost","FileUpload","loading","setLoading","image","setImage","prevImage","deleteHandler","currentIndex","indexOf","newImage","splice","refreshFunction","display","flexDirection","onDrop","files","formData","FormData","append","secure_url","getRootProps","getInputProps","alignItems","justifyContent","fontSize","color","margin","textAlign","backgroundColor","overflowX","minWidth","PostUpload","notify","setNotify","setMovieTitle","setPostTitle","content","setContent","genreCount","setGenreCount","setDirector","setActor","setImages","deleteSpace","split","currentValue","target","directors","actors","editor","ClassicEditor","event","getData","user","userData","url","method","status","console","log","PostUpdate","postData","setPostData","postId","match","params","arrayValueHandler","inputHandler","readOnly","updatedPost","Detail","resPost","setResPost","open","setOpen","ReactHtmlParser","marginTop","readerActor","marginBottom","trim","renderCredit","MbtiRecommend","Modal","close","handleClick","MyHome","modalOpen","setModalOpen","setPostId","chartValue","setChartValue","userId","chartGenreArray","renderChartData","closeModal","genreArray","reduce","acc","cur","count","genreKeys","Object","keys","colorCount","title","resMyPost","label","dataEntry","labelStyle","fill","delete","window","location","replace","MyInfo","userInfo","setUserInfo","newUserInfo","setNewUserInfo","patch","updateUser","withRouter","setUserId","useSelector","state","isAuth","to","Footer","pathName","setPathName","pathname","includes","children","Auth","SpecificComponent","option","adminRoute","AuthenticationCheck","isAdmin","App","exact","path","component","rootReducer","combineReducers","action","register","createStoreWithMiddelware","applyMiddleware","promiseMiddleware","reduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById"],"mappings":"wWAAaA,EAAa,aACbC,EAAgB,gBAChBC,EAAY,YACZC,EAAc,cACdC,EAAY,YACZC,EAAY,YACZC,EAAiB,iB,gBCSfC,EANGC,IAAMC,OAAO,CAC7BC,QAP0B,uCAQ1BC,iBAAiB,EACjBC,QAAS,MCDLC,EAAY,YACZC,EAAY,YACX,SAASC,IACd,IAAMC,EAAUT,EAAUU,IAAV,UAAiBJ,EAAjB,UAAmCK,MAAK,SAACC,GAAD,OAASA,EAAIC,QACrE,MAAO,CACLC,KAAMnB,EACNoB,QAASN,GAoDN,SAASO,EAAYC,GAC1B,IAAMR,EAAUT,EACbU,IADa,UACNH,EADM,0BACqBU,EADrB,iBAEbN,MAAK,SAACC,GAAD,OAASA,EAAIC,QACrB,MAAO,CACLC,KAAMf,EACNgB,QAASN,G,0BCCES,MAvEf,SAAeC,GACb,IAAMC,EAAWC,cADG,EAGAC,IAAMC,SAAS,IAHf,mBAGbN,EAHa,KAGTO,EAHS,OAIYF,IAAMC,SAAS,IAJ3B,mBAIbE,EAJa,KAIHC,EAJG,KA6BpB,OACE,qBAAKC,UAAU,aAAf,SACE,qBAAKA,UAAU,YAAf,SACE,uBAAMC,SApBU,SAAUC,GAC9BA,EAAEC,iBAKFV,EDQG,SAAmBP,GACxB,IAAMJ,EAAUT,EACb+B,KADa,UACLzB,EADK,UACcO,GAC3BF,MAAK,SAACC,GAAD,OAASA,EAAIC,QACrB,MAAO,CACLC,KAAMrB,EACNsB,QAASN,GCdAuB,CAJE,CACTf,KACAQ,cAEwBd,MAAK,SAACC,GACzBA,EAAIG,QAAQkB,aAGfd,EAAMe,QAAQC,KAAK,KAFnBC,MAAMxB,EAAIG,QAAQsB,aAYlB,UACE,sBAAKV,UAAU,cAAf,UACE,uBAAOA,UAAU,WAAWW,QAAQ,UAApC,kCAGA,uBACEX,UAAU,WACVb,KAAK,OACLG,GAAG,UACHsB,MAAOtB,GAAO,GACduB,SApCO,SAAUX,GAC3BL,EAAMK,EAAEY,cAAcF,aAsChB,sBAAKZ,UAAU,oBAAf,UACE,uBAAOA,UAAU,iBAAiBW,QAAQ,gBAA1C,wCAGA,uBACEX,UAAU,iBACVb,KAAK,WACLG,GAAG,gBACHsB,MAAOd,GAAa,GACpBe,SA7Ca,SAAUX,GACjCH,EAAYG,EAAEY,cAAcF,aA+CtB,sBAAKZ,UAAU,aAAf,UACE,wBAAQA,UAAU,eAAeb,KAAK,SAAtC,gCAGA,wBAAQa,UAAU,kBAAkBe,QAnCvB,WACrBvB,EAAMe,QAAQC,KAAK,cAkCX,iD,MC/DG,SAASQ,EAAOxB,GAC7B,IAAMyB,EAAUzB,EAAMyB,QACtB,OACE,mCACGA,EACC,qBAAKjB,UAAU,YAAf,SACE,qBAAKA,UAAU,aAAf,SAA6BR,EAAM0B,SAEnC,O,MC8JKC,MAnKf,SAAkB3B,GAChB,IAAMC,EAAWC,cADM,EAEOC,IAAMC,UAAS,GAFtB,mBAEhBqB,EAFgB,KAEPG,EAFO,OAGWzB,IAAMC,SAAS,IAH1B,mBAGhByB,EAHgB,KAGLC,EAHK,OAIH3B,IAAMC,SAAS,IAJZ,mBAIhBN,EAJgB,KAIZO,EAJY,OAKSF,IAAMC,SAAS,IALxB,mBAKhBE,EALgB,KAKNC,EALM,OAMCJ,IAAMC,SAAS,IANhB,mBAMhB2B,EANgB,KAMVC,EANU,OAOS7B,IAAMC,SAAS,IAPxB,mBAOhB6B,EAPgB,KAONC,EAPM,OAQW/B,IAAMC,WARjB,mBAQhB+B,EARgB,KAQLC,EARK,OASCjC,IAAMC,SAAS,IAThB,mBAShBiC,EATgB,KASVC,EATU,KAuEvB,OACE,sBAAK9B,UAAU,gBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,uBAAMC,SA7CU,SAAUC,GAC9BA,EAAEC,iBASFV,EHxBG,SAAsBP,GAC3B,IAAMJ,EAAUT,EACb+B,KADa,UACLzB,EADK,aACiBO,GAC9BF,MAAK,SAACC,GAAD,OAASA,EAAIC,QACrB,MAAO,CACLC,KAAMpB,EACNqB,QAASN,GGkBAiD,CARE,CACTzC,KACAQ,WACAyB,OACAE,WACAE,YACAE,UAGC7C,MAAK,SAACC,GACDA,EAAIG,QAAQ4C,SACdV,EAAa,8EACbF,GAAW,GACXa,YAAW,WACTb,GAAW,GACX5B,EAAMe,QAAQC,KAAK,YAClB,QAEmC,IAAlCvB,EAAIG,QAAQ8C,IAAIC,WAAW7C,KAC7BgC,EAAa,4DACbF,GAAW,GACXa,YAAW,WACTb,GAAW,KACV,MACHvB,EAAM,KAEoC,IAAxCZ,EAAIG,QAAQ8C,IAAIC,WAAWV,WAC7BH,EAAa,4DACbF,GAAW,GACXa,YAAW,WACTb,GAAW,KACV,MACHM,EAAY,SAIjBU,OAAM,SAACF,GACNzB,MAAMyB,EAAK,iJAMX,UACE,sBAAKlC,UAAU,aAAf,UACE,uBAAOA,UAAU,WAAWW,QAAQ,YAApC,4BAGA,uBACEX,UAAU,WACVb,KAAK,OACLG,GAAG,YACHsB,MAAOW,GAAQ,GACfV,SAnES,SAAUX,GAC7BsB,EAAQtB,EAAEY,cAAcF,aAqElB,sBAAKZ,UAAU,aAAf,UACE,uBAAOA,UAAU,WAAWW,QAAQ,UAApC,kCAGA,uBACEX,UAAU,WACVb,KAAK,OACLG,GAAG,UACHsB,MAAOtB,GAAM,GACbuB,SArFO,SAAUX,GAC3BL,EAAMK,EAAEY,cAAcF,QAqFZyB,YAAY,kCAGhB,sBAAKrC,UAAU,aAAf,UACE,uBAAOA,UAAU,WAAWW,QAAQ,gBAApC,wCAGA,uBACEX,UAAU,WACVb,KAAK,WACLG,GAAG,gBACHsB,MAAOd,GAAY,GACnBe,SA/Fa,SAAUX,GACjCH,EAAYG,EAAEY,cAAcF,aAiGtB,sBAAKZ,UAAU,aAAf,UACE,uBAAOA,UAAU,WAAWW,QAAQ,gBAApC,kCAGA,uBACEX,UAAU,WACVb,KAAK,OACLG,GAAG,gBACHsB,MAAOa,GAAY,GACnBZ,SArGa,SAAUX,GACjCwB,EAAYxB,EAAEY,cAAcF,QAqGlByB,YAAY,kCAGhB,sBAAKrC,UAAU,aAAf,UACE,uBAAOA,UAAU,WAAWW,QAAQ,aAApC,4BAGA,uBACEX,UAAU,WACVqC,YAAY,yEACZlD,KAAK,OACLG,GAAG,aACHsB,MAAOe,GAAa,GACpBd,SAhHU,SAAUX,GAC9B0B,EAAa1B,EAAEY,cAAcF,aAkHvB,sBAAKZ,UAAU,mBAAf,UACE,uBAAOA,UAAU,WAAWW,QAAQ,YAApC,oBAGA,uBACEX,UAAU,WACVqC,YAAY,yEACZlD,KAAK,OACLG,GAAG,YACHsB,MAAOiB,GAAQ,GACfhB,SA1HS,SAAUX,GAC7B4B,EAAQ5B,EAAEY,cAAcF,aA4HlB,qBAAKZ,UAAU,aAAf,SACE,wBAAQA,UAAU,kBAAkBb,KAAK,SAAzC,6CAMN,cAAC6B,EAAD,CAAQC,QAASA,EAASC,KAAMG,Q,yCCpKhCiB,EAAS,CACb,uCACA,qBACA,qBACA,eACA,qBACA,eACA,+BACA,qBACA,iCACA,qBACA,gBAGIC,EAAa,CACjB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,W,OCoBaC,MAzCf,SAAuBhD,GAAQ,IAAD,EACFG,IAAMC,SAAS,IADb,mBACrB6C,EADqB,KACdC,EADc,KAE5B/C,IAAMgD,WAAU,WACVnD,EAAMoD,cACRpD,EAAMqD,aAAaJ,KAGpB,CAACA,IAEJ,IAYMK,EAAcR,EAAOS,KAAI,SAACC,EAAMC,GACpC,OACE,sBAAiBjD,UAAU,eAA3B,UACE,uBACEA,UAAU,iBACVb,KAAK,WACLG,GAAI0D,EACJnC,SAAU,SAACX,IAnBE,SAACgD,EAAS5D,GAE7B,GADAE,EAAM2D,sBACFD,EACFR,EAAS,GAAD,mBAAKD,GAAL,CAAYnD,SACf,CACL,IAAMsD,EAAeH,EAAMW,QAAO,SAACJ,GACjC,OAAOA,IAAS1D,KAElBoD,EAASE,IAYHS,CAAanD,EAAEY,cAAcoC,QAASF,MAG1C,uBAAOhD,UAAU,cAAcW,QAASqC,EAAxC,SACGA,MAVKC,MAed,OAAO,qBAAKjD,UAAU,2BAAf,SAA2C8C,KC0GrCQ,MA5If,SAAc9D,GAAQ,IAAD,EACeG,IAAMC,SAAS,IAD9B,mBACZ2D,EADY,KACDC,EADC,OAEqB7D,IAAMC,UAAS,GAFpC,mBAEZgD,EAFY,KAEEa,EAFF,KAInB9D,IAAMgD,WAAU,WACdtE,EACGU,IAAI,qBACJC,MAAK,SAACC,GACDA,EAAIC,KAAK8C,SACXwB,EAAavE,EAAIC,KAAKkB,SAGzBgC,OAAM,SAACF,GAAD,OAASzB,MAAMyB,EAAK,0FAC5B,IAEH,IAmBMwB,EAAaH,EAAUR,KAAI,SAAC3C,EAAM6C,GACtC,IAAMU,EAAOC,IAAOxD,EAAKyD,WAAWC,OAAO,gCAC3C,OACE,sBAAK9D,UAAU,iBAAf,UACE,qBAAKA,UAAU,aAAf,SACG2D,GAD8BvD,EAAK2D,KAGtC,sBACE/D,UAAU,WAEVe,QAAS,kBAAMvB,EAAMe,QAAQC,KAAd,gBAA4BJ,EAAK2D,OAHlD,UAKE,sBAAK/D,UAAU,oBAAf,UACE,sBAAKA,UAAU,mBAAf,cAEGI,EAAK4D,UAAUC,OAAS,GAAxB,UACM7D,EAAK4D,UAAUE,MAAM,EAAG,IAD9B,gBAEG9D,EAAK4D,UAJX,OAOA,sBAAKhE,UAAU,YAAf,UACE,uBAAMA,UAAU,kBAAhB,oBACKI,EAAK+D,OAAO1C,SADjB,kBAGA,uBAAMzB,UAAU,oBAAhB,oBAAuCI,EAAKgE,WAA5C,aACA,sBAAMpE,UAAU,kBAAhB,oCAEF,uBACEqE,OAAO,IACPC,MAAM,MACNC,OAAO,OACPvE,UAAU,mBAJZ,SAME,kCACE,+BACE,oBACEwE,MAAM,SACNxE,UAAU,iBACVyE,MAAO,CAAEC,QAAS,MAAOJ,MAAO,QAHlC,0BAOA,oBAAItE,UAAU,iBAAd,SAAgCI,EAAKuE,SAASC,KAAK,WAErD,+BACE,oBACEJ,MAAM,SACNxE,UAAU,cACVyE,MAAO,CAAEC,QAAS,MAAOJ,MAAO,QAHlC,0BAOA,oBAAItE,UAAU,cAAd,SACGI,EAAKyE,MAAMZ,OAAS,GAApB,UACM7D,EAAKyE,MAAMX,MAAM,EAAG,IAD1B,gBAEG9D,EAAKyE,MAAMD,KAAK,WAGxB,+BACE,oBACEJ,MAAM,SACNxE,UAAU,cACVyE,MAAO,CAAEC,QAAS,MAAOJ,MAAO,QAHlC,0BAOA,oBAAItE,UAAU,cAAd,SAA6BI,EAAKqC,mBAK1C,sBAAKzC,UAAU,gBAAf,UACE,qBAAKA,UAAU,eACf,qBAAKA,UAAU,eACf,qBAAKA,UAAU,eACf,qBACE8E,IAAK1E,EAAK2E,OAAO,GACjBC,IAAI,kBACJhF,UAAU,qBArETiD,KAN4B7C,EAAK2D,QAmF9C,OACE,sBAAK/D,UAAU,YAAf,UACE,cAAC,EAAD,CACE6C,aAAc,SAACJ,GAAD,OAxGC,SAAUwC,GAC7BxB,GAAgB,GAChB,IAAMyB,EAAgB,CACpBzC,MAAOwC,GAET3G,IACG8B,KAAK,wBAAyB8E,GAC9BlG,MAAK,SAACC,GACDA,EAAIC,KAAK8C,SACXwB,EAAavE,EAAIC,KAAKkB,SAGzBgC,OAAM,SAACF,GAAD,OAASzB,MAAMyB,EAAK,wFA4FAiD,CAAa1C,IACtCG,aAAcA,EACdO,oBA9GsB,WAC1BM,GAAgB,MA+GbF,EAAUU,OAAS,EAClB,mCAAGP,IAEH,qBAAK1D,UAAU,eAAf,SACE,qBAAKA,UAAU,cAAf,SACE,qBAAKA,UAAU,eAAf,iG,iDC5BGoF,MA5Gf,SAAoB5F,GAAQ,IAAD,EACKG,IAAMC,UAAS,GADpB,mBAClByF,EADkB,KACTC,EADS,OAEC3F,IAAMC,SAAS,IAFhB,mBAElB2F,EAFkB,KAEXC,EAFW,KAIzB7F,IAAMgD,WAAU,WACVnD,EAAMiG,WACRD,EAAShG,EAAMiG,WACfH,GAAW,IAEXE,EAAS,MAEV,CAAChG,EAAMiG,YAEV,IAiBMC,EAAgB,SAACH,GACrB,IAAMI,EAAeJ,EAAMK,QAAQL,GAC/BM,EAAQ,YAAON,GACnBM,EAASC,OAAOH,EAAc,GAC9BH,EAASK,GACTP,GAAW,GACX9F,EAAMuG,gBAAgBF,IAGxB,OACE,sBACEpB,MAAO,CACLuB,QAAS,OACTC,cAAe,SACf3B,MAAO,OAJX,UAOE,cAAC,IAAD,CAAU4B,OAlCM,SAACC,GACnB,IAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,gBAAiB,gBACjCF,EAASE,OAAO,OAAQH,EAAM,IAC9B7H,IACG8B,KACC,2DACAgG,GAEDpH,MAAK,SAACC,GACLqG,GAAW,GACXE,EAASvG,EAAIC,KAAKqH,YAClB/G,EAAMuG,gBAAgB9G,EAAIC,KAAKqH,eAEhCnE,OAAM,SAACF,GAAD,OAASzB,MAAMyB,EAAK,+FAoB3B,SACG,gBAAGsE,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,cAAjB,OACC,8CACEhC,MAAO,CACLF,OAAQ,IACRF,OAAQ,oBACR2B,QAAS,OACTU,WAAY,SACZC,eAAgB,WAEdH,KARN,cAUE,mBACExG,UAAU,cACVyE,MAAO,CACLmC,SAAU,OACVC,MAAO,sBAGX,qCAAWJ,aAIhBpB,EACC,qBAAKZ,MAAO,CAAEJ,OAAQ,qBAAtB,SACE,oBACEI,MAAO,CACLoC,MAAO,wBACPC,OAAQ,YACRxC,MAAO,QACPC,OAAQ,OACRwC,UAAW,SACXC,gBAAiB,2BAPrB,qBAcF,qBACEjG,QAAS,kBAAM2E,GACfjB,MAAO,CACLuB,QAAS,OACTzB,OAAQ,OACR0C,UAAW,UALf,SAQE,qBACExC,MAAO,CACLyC,SAAU,QACV3C,OAAQ,QAEVO,IAAKS,EACLP,IAAI,yBC6GDmC,MA5Mf,SAAoB3H,GAAQ,IAAD,EACGG,IAAMC,SAAS,IADlB,mBAClBwH,EADkB,KACVC,EADU,OAEK1H,IAAMC,UAAS,GAFpB,mBAElBqB,EAFkB,KAETG,EAFS,OAGWzB,IAAMC,SAAS,IAH1B,mBAGlBwE,EAHkB,KAGNkD,EAHM,OAIS3H,IAAMC,SAAS,IAJxB,mBAIlBoE,EAJkB,KAIPuD,EAJO,OAKK5H,IAAMC,SAAS,IALpB,mBAKlB4H,EALkB,KAKTC,EALS,OAMC9H,IAAMC,SAAS,IANhB,mBAMlB6C,EANkB,KAMXC,EANW,OAOW/C,IAAMC,SAAS,GAP1B,mBAOlB8H,EAPkB,KAONC,EAPM,OAQOhI,IAAMC,SAAS,IARtB,mBAQlB+E,EARkB,KAQRiD,EARQ,OASCjI,IAAMC,SAAS,IAThB,mBASlBiF,EATkB,KASXgD,EATW,OAUGlI,IAAMC,SAAS,IAVlB,mBAUlBmF,EAVkB,KAUV+C,EAVU,KA+CnBhF,EAAcR,EAAOS,KAAI,SAACC,EAAMC,GACpC,OACE,gCACE,uBACE9D,KAAK,WACLG,GAAI0D,EACJnC,SAAU,SAACX,GAfE,IAACgD,EAAS5D,EAAT4D,EAgBChD,EAAEY,cAAcoC,QAhBR5D,EAgBiB0D,EAf1CE,GACFR,EAASpD,GACTqI,EAAcD,EAAa,IAE3BC,EAAcD,EAAa,MAczB,uBAAO/G,QAASqC,EAAhB,SAAuBA,MARfC,MAaR8E,EAAc,SAAU7G,GAG5B,OADcA,EAAK8G,MAAM,MA+C3B,OACE,sBAAKhI,UAAU,cAAf,UACE,cAACgB,EAAD,CAAQC,QAASA,EAASC,KAAMkG,IAChC,sBAAKpH,UAAU,eAAf,UACE,sBAAKA,UAAU,aAAf,UACE,uBAAOqE,OAAO,IAAIC,MAAM,MAAMtE,UAAU,mBAAxC,SACE,kCACE,+BACE,oBAAIwE,MAAM,SAASC,MAAO,CAAEC,QAAS,MAAOJ,MAAO,QAAnD,SACE,sEAEF,6BACE,uBACEtE,UAAU,mBACVb,KAAK,OACLkD,YAAY,yDACZd,KAAK,aACLV,SA/GO,SAACX,GACxB,IAAM+H,EAAe/H,EAAEgI,OAAOtH,MAC9B2G,EAAaU,WAiHH,+BACE,oBAAIzD,MAAM,SAASC,MAAO,CAAEC,QAAS,MAAOJ,MAAO,QAAnD,SACE,gEAEF,6BACE,uBACEtE,UAAU,oBACVb,KAAK,OACLkD,YAAY,4BACZd,KAAK,cACLV,SAlIQ,SAACX,GACzB,IAAM+H,EAAe/H,EAAEgI,OAAOtH,MAC9B0G,EAAcW,WAoIJ,+BACE,oBAAIzD,MAAM,SAASC,MAAO,CAAEC,QAAS,MAAOJ,MAAO,QAAnD,SACE,mDAEF,6BACE,uBACEtE,UAAU,iBACVb,KAAK,OACLkD,YAAY,mFACZd,KAAK,WACLV,SAtIM,SAACX,GACvB,IAAM+H,EAAe/H,EAAEgI,OAAOtH,MACxBuH,EAAYJ,EAAYE,GAC9BL,EAAYO,WAuIF,+BACE,oBAAI3D,MAAM,SAASC,MAAO,CAAEC,QAAS,MAAOJ,MAAO,QAAnD,SACE,mDAEF,6BACE,uBACEtE,UAAU,cACVb,KAAK,OACLkD,YAAY,mFACZd,KAAK,QACLV,SA9IG,SAACX,GACpB,IAAM+H,EAAe/H,EAAEgI,OAAOtH,MACxBwH,EAASL,EAAYE,GAC3BJ,EAASO,WA+IC,+BACE,oBAAI5D,MAAM,SAASC,MAAO,CAAEC,QAAS,MAAOJ,MAAO,QAAnD,SACE,mDAEF,oBAAIG,MAAO,CAAEC,QAAS,QAAtB,SACE,qBAAK1E,UAAU,iBAAf,SAAiC8C,cAKzC,cAAC,EAAD,CAAYiD,gBApHA,SAACF,GACnBiC,EAAUjC,SAqHN,cAAC,WAAD,CACEwC,OAAQC,IACRpJ,KAAK,gCACL2B,SAAU,SAAC0H,EAAOF,GAChB,IAAMnJ,EAAOmJ,EAAOG,UA3J5Bf,EA4JuBvI,SAIrB,qBAAKc,UAAU,mBAAf,SACE,wBAAQA,UAAU,gBAAgBe,QA5HtB,WAChB,IAAMX,EAAO,CACX+D,OAAQ3E,EAAMiJ,KAAKC,SAAS3E,IAC5BK,aACAJ,YACAwD,UACA/E,QACAkC,WACAE,QACAE,UAEEf,EAAUC,OAAS,GACjByD,EAAa,GACfL,EAAU,sFACVjG,GAAW,GACXa,YAAW,WACTb,GAAW,KACV,OAEH/C,EAAU,CACRsK,IAAK,iBACLC,OAAQ,OACR1J,KAAMkB,IAELpB,MAAK,SAACC,GACc,MAAfA,EAAI4J,SACNxB,EAAU,wEACVjG,GAAW,GACXa,YAAW,WACTb,GAAW,GACX5B,EAAMe,QAAQC,KAAd,gBAA4BhB,EAAMiJ,KAAKC,SAAS3E,QAC/C,UAGN3B,OAAM,SAACF,GAAD,OAAS4G,QAAQC,IAAI7G,MAE3BzB,MAAM,4GAwFT,4C,eCEOuI,MApMf,SAAoBxJ,GAClB,IAAMC,EAAWC,cADQ,EAEGC,IAAMC,SAAS,IAFlB,mBAElBwH,EAFkB,KAEVC,EAFU,OAGK1H,IAAMC,UAAS,GAHpB,mBAGlBqB,EAHkB,KAGTG,EAHS,OAIKzB,IAAMC,SAAS,IAJpB,mBAIlB4H,EAJkB,KAITC,EAJS,OAKO9H,IAAMC,SAAS,CAC7CwE,WAAY,GACZJ,UAAW,GACXvB,MAAO,GACPoC,MAAO,GACPF,SAAU,GACVI,OAAQ,KAXe,mBAKlBkE,EALkB,KAKRC,EALQ,KAanBC,EAAS3J,EAAM4J,MAAMC,OAAOF,OAElCxJ,IAAMgD,WAAU,WACdlD,EAASJ,EAAY8J,IAASnK,MAAK,SAACC,GAC9BA,EAAIG,QAAQ4C,SACdkH,EAAYjK,EAAIG,QAAQgB,KAAK,SAGhC,CAAC+I,IAEJ,IAsCMG,EAAoB,SAACpJ,GAAO,IAAD,EACPA,EAAEY,cAAlBS,EADuB,EACvBA,KAAMX,EADiB,EACjBA,MACRM,EAAO6G,EAAYnH,GACzBsI,EAAY,2BAAKD,GAAN,kBAAiB1H,EAAOL,MAG/BqI,EAAe,SAACrJ,GAAO,IAAD,EACFA,EAAEY,cAAlBS,EADkB,EAClBA,KAAMX,EADY,EACZA,MACdsI,EAAY,2BAAKD,GAAN,kBAAiB1H,EAAOX,MAO/BkC,EAAcR,EAAOS,KAAI,SAACC,EAAMC,GACpC,OACE,gCACE,uBACE9D,KAAK,WACLG,GAAI0D,EACJE,QAAS+F,EAASxG,QAAUO,EAC5BwG,UAAQ,IAEV,uBAAO7I,QAASqC,EAAhB,SAAuBA,MAPfC,MAYR8E,EAAc,SAAU7G,GAG5B,OADcA,EAAK8G,MAAM,MAI3B,OACE,sBAAKhI,UAAU,cAAf,UACE,cAACgB,EAAD,CAAQC,QAASA,EAASC,KAAMkG,IAChC,sBAAKpH,UAAU,eAAf,UACE,sBAAKA,UAAU,aAAf,UACE,uBAAOqE,OAAO,IAAIC,MAAM,MAAMtE,UAAU,mBAAxC,SACE,kCACE,+BACE,oBAAIwE,MAAM,SAASC,MAAO,CAAEC,QAAS,MAAOJ,MAAO,QAAnD,SACE,sEAEF,6BACE,uBACE1D,MAAOqI,EAASjF,WAAa,GAC7BhE,UAAU,mBACVb,KAAK,OACLkD,YAAY,yDACZd,KAAK,YACLV,SAAU0I,SAIhB,+BACE,oBAAI/E,MAAM,SAASC,MAAO,CAAEC,QAAS,MAAOJ,MAAO,QAAnD,SACE,gEAEF,6BACE,uBACE1D,MAAOqI,EAAS7E,YAAc,GAC9BpE,UAAU,oBACVb,KAAK,OACLkD,YAAY,4BACZd,KAAK,aACLV,SAAU0I,SAIhB,+BACE,oBAAI/E,MAAM,SAASC,MAAO,CAAEC,QAAS,MAAOJ,MAAO,QAAnD,SACE,mDAEF,6BACE,uBACE1D,MAAOqI,EAAStE,UAAY,GAC5B3E,UAAU,iBACVb,KAAK,OACLkD,YAAY,mFACZd,KAAK,WACLV,SAAUyI,SAIhB,+BACE,oBAAI9E,MAAM,SAASC,MAAO,CAAEC,QAAS,MAAOJ,MAAO,QAAnD,SACE,mDAEF,6BACE,uBACE1D,MAAOqI,EAASpE,OAAS,GACzB7E,UAAU,cACVb,KAAK,OACLkD,YAAY,mFACZd,KAAK,QACLV,SAAUyI,SAIhB,+BACE,oBAAI9E,MAAM,SAASC,MAAO,CAAEC,QAAS,MAAOJ,MAAO,QAAnD,SACE,mDAEF,oBAAIG,MAAO,CAAEC,QAAS,QAAtB,SACE,qBAAK1E,UAAU,gBAAf,SAAgC8C,cAKxC,cAAC,EAAD,CACEiD,gBAvJU,SAACF,GACnBoD,EAASlE,OAASc,GAuJVJ,UAAWwD,EAASlE,YAGxB,cAAC,WAAD,CACEsD,OAAQC,IACRpJ,KAAM+J,EAASzB,SAAW,GAC1B3G,SAAU,SAAC0H,EAAOF,GAChB,IAAMnJ,EAAOmJ,EAAOG,UA7G5Bf,EA8GuBvI,SAIrB,qBAAKc,UAAU,mBAAf,SACE,wBAAQA,UAAU,gBAAgBe,QAjKpB,WAClB,IAAM0I,EAAc,CAClBN,SACAhF,OAAQ3E,EAAMiJ,KAAKC,SAAS3E,IAC5BK,WAAY6E,EAAS7E,WACrBJ,UAAWiF,EAASjF,UACpBwD,QAASA,EACT/E,MAAOwG,EAASxG,MAChBkC,SAAUsE,EAAStE,SACnBE,MAAOoE,EAASpE,MAChBE,OAAQkE,EAASlE,QAGfkE,EAASjF,UAAUC,OAAS,GAC9B3F,IAAM,CACJqK,IAAK,mBACLC,OAAQ,MACR1J,KAAMuK,IAELzK,MAAK,SAACC,GACc,MAAfA,EAAI4J,SACNxB,EAAU,kEACVjG,GAAW,GACXa,YAAW,WACTb,GAAW,GACX5B,EAAMe,QAAQC,KAAd,gBAA4BhB,EAAMiJ,KAAKC,SAAS3E,QAC/C,UAGN3B,OAAM,SAACF,GAAD,OAAS4G,QAAQC,IAAI7G,MACzBzB,MAAM,4GAmIT,4C,eChHOiJ,MAjFf,SAAgBlK,GAAQ,IAAD,EACSG,IAAMC,SAAS,IADxB,mBACd+J,EADc,KACLC,EADK,OAEKjK,IAAMC,SAAS,IAFpB,mBAEdiF,EAFc,KAEPgD,EAFO,OAGGlI,IAAMC,UAAS,GAHlB,mBAGdiK,EAHc,KAGRC,EAHQ,KAIfX,EAAS3J,EAAM4J,MAAMC,OAAOF,OAC5B1J,EAAWC,cAEjBC,IAAMgD,WAAU,WASd,OARAlD,EAASJ,EAAY8J,IAClBnK,MAAK,SAACC,GACDA,EAAIG,QAAQ4C,UACd4H,EAAW3K,EAAIG,QAAQgB,MACvByH,EAAS5I,EAAIG,QAAQgB,KAAK,GAAGyE,WAGhCzC,OAAM,SAACF,GAAD,OAAS4G,QAAQC,IAAI7G,MACvB,WACL4H,GAAQ,MAET,CAACX,IAEJlH,YAAW,WACT6H,GAAQ,KACP,KAEH,IAAMpG,EAAaiG,EAAQ5G,KAAI,SAAC3C,EAAM6C,GACpC,OACE,sBAAKjD,UAAU,mBAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,qBAAKA,UAAU,oBAAf,SAAoCI,EAAK4D,cAE3C,sBAAKhE,UAAU,uBAAf,UACE,sBAAKA,UAAU,oBAAf,2BAAwCI,EAAKgE,cAC7C,sBAAKpE,UAAU,uBAAf,2BAA2CI,EAAKuE,YAChD,sBAAK3E,UAAU,oBAAf,2BAAwCI,EAAKyE,MAAMD,KAAK,SACxD,sBAAK5E,UAAU,oBAAf,2BAAwCI,EAAKqC,SAC7C,qBAAKzC,UAAU,sBAAf,SACG+J,YAAgB3J,EAAKoH,WAExB,sBAAK/C,MAAO,CAAEuF,UAAW,SAAzB,UACE,uBAAMhK,UAAU,uBAAhB,oBACKI,EAAK+D,OAAO1C,YAEjB,sBAAMzB,UAAU,0BAAhB,qDAhBiCiD,MAuBrCgH,EAAcpF,EAAM9B,KAAI,SAACC,GAC7B,OACE,sBAAoByB,MAAO,CAAEyF,aAAc,QAA3C,+BACWlH,EAAKmH,SADNnH,EAAKe,QAMbqG,EAAeT,EAAQ5G,KAAI,SAACC,GAChC,OACE,sBAAKhD,UAAU,kBAAf,UACE,qBAAKA,UAAU,2BAAf,SAA2CgD,EAAKoB,aAChD,sBAAKpE,UAAU,cAAf,+BAAsCgD,EAAKP,SAC3C,sBAAKzC,UAAU,cAAf,+BAAsCgD,EAAK2B,YAC3C,qBAAK3E,UAAU,cAAf,SAA8BiK,MAJMjH,EAAKe,QAS/C,OAAK4F,EAEH,mCACGE,EACC,qBAAK7J,UAAU,WAAf,SAA2BoK,IAE3B,qBAAKpK,UAAU,mBAAf,SAAmC0D,MANpB,MCrER2G,MAJf,WACE,OAAO,iD,cCAM,SAASC,EAAT,GAAoD,IAAnCT,EAAkC,EAAlCA,KAAMU,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,YAAatJ,EAAQ,EAARA,KACxD,OACE,mCACG2I,EACC,qBAAK7J,UAAU,WAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,aAAf,SAA6BkB,IAC7B,sBAAKlB,UAAU,aAAf,UACE,wBAAQA,UAAU,YAAYe,QAASwJ,EAAvC,gCAGA,wBAAQvK,UAAU,aAAae,QAAS,kBAAMyJ,KAA9C,4BAMJ,O,YCoHKC,MA/Hf,SAAgBjL,GAAQ,IAAD,EACSG,IAAMC,SAAS,IADxB,mBACd+J,EADc,KACLC,EADK,OAEajK,IAAMC,UAAS,GAF5B,mBAEd8K,EAFc,KAEHC,EAFG,OAGOhL,IAAMC,SAAS,IAHtB,mBAGduJ,EAHc,KAGNyB,EAHM,OAIejL,IAAMC,SAAS,IAJ9B,mBAIdiL,EAJc,KAIFC,EAJE,KAKfC,EAASvL,EAAM4J,MAAMC,OAAO/J,GAC5B0L,EAAkB,GAExBrL,IAAMgD,WAAU,WACdtE,EACGU,IADH,iCACiCgM,EADjC,iBAEG/L,MAAK,SAACC,GACDA,EAAIC,KAAK8C,UACX4H,EAAW3K,EAAIC,KAAKkB,MACpBnB,EAAIC,KAAKkB,KAAK2C,KAAI,SAAC3C,GACjB,OAAO4K,EAAgBxK,KAAKJ,EAAKqC,UAEnCwI,EAAgBD,SAGrB,IAEH,IAAME,EAAa,WACjBP,GAAa,IAcTM,EAAkB,SAACE,GACvB,IAAMzD,EAAayD,EAAWC,QAAO,SAACC,EAAKC,GACzC,IACMC,EADaF,EAAIC,IACK,EAC5B,OAAO,2BACFD,GADL,kBAEGC,EAAMC,EAAQ,MAEhB,IACGC,EAAYC,OAAOC,KAAKhE,GACxBiE,EAAapJ,EAAW2B,MAAM,EAAGsH,EAAUvH,QAC3CrD,EAAQ4K,EAAUzI,KAAI,SAACC,EAAMC,GAAP,MAAkB,CAC5C2I,MAAO5I,EACPpC,MAAO8G,EAAW1E,GAClB6D,MAAO8E,EAAW1I,OAEpB6H,EAAclK,IAEViL,EAAYlC,EAAQ5G,KAAI,SAAC3C,GAC7B,OACE,qBAAKJ,UAAU,oBAAf,SACE,sBAAKA,UAAU,cAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,sBAAMA,UAAU,gBAAhB,SAAiCI,EAAK4D,YACtC,qBACEhE,UAAU,sBACVe,QAAS,kBAAMvB,EAAMe,QAAQC,KAAd,uBAAmCJ,EAAK2D,OAFzD,0BAMA,qBACE/D,UAAU,wBACVe,QAAS,WACP6J,EAAUxK,EAAK2D,KACf4G,GAAa,IAJjB,6BAUF,sBAAK3K,UAAU,sBAAf,2BAA0CI,EAAKgE,cAC/C,sBAAKpE,UAAU,mBAAf,2BACOI,EAAKuE,SAASC,KAAK,SAE1B,sBAAK5E,UAAU,gBAAf,2BAAoCI,EAAKyE,MAAMD,KAAK,SACpD,sBAAK5E,UAAU,gBAAf,2BAAoCI,EAAKqC,SACzC,qBAAKzC,UAAU,kBAAf,SAAkC+J,YAAgB3J,EAAKoH,eA1BnBpH,EAAK2D,QAgCjD,OACE,mCACG4F,EAAQ1F,OAAS,EAChB,sBAAKjE,UAAU,eAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,mBAAGA,UAAU,qBACb,qBAAKA,UAAU,aAAf,mCAEF,qBAAKA,UAAU,cAAf,SACE,cAAC,WAAD,CACE8L,MAAO,SAACtM,GAAD,OAAWA,EAAMuM,UAAUH,OAClCI,WAAY,CAAEpF,SAAU,MAAOqF,KAAM,WACrC/M,KAAM2L,SAIXgB,EACD,cAAC,EAAD,CACEhC,KAAMa,EACNH,MAAOW,EACPV,YApFS,WACjBlM,IAAM4N,OAAN,kCAAwC/C,IAAUnK,MAAK,SAACC,GAClDA,EAAIC,KAAK8C,SACXkJ,IACAiB,OAAOC,SAASC,QAAhB,gBAAiCtB,KAEjCtK,MAAM,sEA+EFS,KAAM,yDAIV,qBAAKlB,UAAU,eAAf,SACE,qBAAKA,UAAU,eAAf,SACE,qBAAKA,UAAU,cAAf,SACE,qBAAKA,UAAU,eAAf,kG,OC+BCsM,MAxJf,SAAgB9M,GACd,IAAMC,EAAWC,cADI,EAESC,IAAMC,UAAS,GAFxB,mBAEdqB,EAFc,KAELG,EAFK,OAGazB,IAAMC,SAAS,IAH5B,mBAGdyB,EAHc,KAGHC,EAHG,OAIW3B,IAAMC,SAAS,IAJ1B,mBAId2M,EAJc,KAIJC,EAJI,OAKiB7M,IAAMC,SAAS,IALhC,mBAKd6M,EALc,KAKDC,EALC,KAOrB/M,IAAMgD,WAAU,WACVnD,EAAMiJ,KAAKC,UACb8D,EAAYhN,EAAMiJ,KAAKC,YAExB,CAAClJ,IAEJ,IAAM+J,EAAe,SAACrJ,GAAO,IAAD,EACFA,EAAEY,cAAlBS,EADkB,EAClBA,KAAMX,EADY,EACZA,MACd4L,EAAY,2BAAKD,GAAN,kBAAiBhL,EAAOX,KACnC8L,EAAe,2BAAKD,GAAN,kBAAoBlL,EAAOX,MAsC3C,OACE,sBAAKZ,UAAU,gBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,uBAAMC,SAtCU,SAAUC,GAC9BA,EAAEC,iBACFsM,EAAW,IAAUF,EAASxI,IAC9BtE,Ed+BG,SAAoBP,GACzB,IAAMJ,EAAUT,EACbsO,MADa,UACJhO,EADI,WACgBO,GAC7BF,MAAK,SAACC,GAAD,OAASA,EAAIC,QACrB,MAAO,CACLC,KAAMhB,EACNiB,QAASN,GcrCA8N,CAAWH,IACjBzN,MAAK,SAACC,GACDA,EAAIG,QAAQ4C,SACdV,EAAa,+EACbF,GAAW,GACXa,YAAW,WACTb,GAAW,GACX+K,OAAOC,SAASC,QAAQ,cACvB,QAEmC,IAAlCpN,EAAIG,QAAQ8C,IAAIC,WAAW7C,KAC7BgC,EAAa,4DACbF,GAAW,GACXa,YAAW,WACTb,GAAW,KACV,MACHmL,EAASjN,GAAK,IAE4B,IAAxCL,EAAIG,QAAQ8C,IAAIC,WAAWV,WAC7BH,EAAa,4DACbF,GAAW,GACXa,YAAW,WACTb,GAAW,KACV,MACHmL,EAAS9K,SAAW,QAIzBW,OAAM,SAACF,GACNzB,MAAMyB,EAAK,kJAMX,UACE,sBAAKlC,UAAU,aAAf,UACE,uBAAOA,UAAU,WAAWW,QAAQ,YAApC,4BAGA,uBACEX,UAAU,WACVb,KAAK,OACLG,GAAG,YACHiC,KAAK,OACLX,MAAO2L,EAAShL,MAAQ,GACxBV,SAAU0I,OAGd,sBAAKvJ,UAAU,aAAf,UACE,uBAAOA,UAAU,WAAWW,QAAQ,UAApC,kCAGA,uBACEX,UAAU,WACVb,KAAK,OACLG,GAAG,UACHiC,KAAK,KACLX,MAAO2L,EAASjN,IAAM,GACtBuB,SAAU0I,EACVlH,YAAY,kCAGhB,sBAAKrC,UAAU,aAAf,UACE,uBAAOA,UAAU,WAAWW,QAAQ,gBAApC,wCAGA,uBACEX,UAAU,WACVb,KAAK,WACLG,GAAG,gBACHiC,KAAK,WACLX,MAAO2L,EAASzM,UAAY,GAC5Be,SAAU0I,OAGd,sBAAKvJ,UAAU,aAAf,UACE,uBAAOA,UAAU,WAAWW,QAAQ,gBAApC,kCAGA,uBACEX,UAAU,WACVb,KAAK,OACLG,GAAG,gBACHiC,KAAK,WACLX,MAAO2L,EAAS9K,UAAY,GAC5BZ,SAAU0I,EACVlH,YAAY,kCAGhB,sBAAKrC,UAAU,aAAf,UACE,uBAAOA,UAAU,WAAWW,QAAQ,aAApC,4BAGA,uBACEX,UAAU,WACVqC,YAAY,yEACZlD,KAAK,OACLG,GAAG,aACHiC,KAAK,YACLX,MAAO2L,EAAS5K,WAAa,GAC7Bd,SAAU0I,OAGd,sBAAKvJ,UAAU,mBAAf,UACE,uBAAOA,UAAU,WAAWW,QAAQ,YAApC,oBAGA,uBACEX,UAAU,WACVqC,YAAY,yEACZlD,KAAK,OACLG,GAAG,YACHiC,KAAK,OACLX,MAAO2L,EAAS1K,MAAQ,GACxBhB,SAAU0I,OAGd,qBAAKvJ,UAAU,aAAf,SACE,wBAAQA,UAAU,kBAAkBb,KAAK,SAAzC,iCAMN,cAAC6B,EAAD,CAAQC,QAASA,EAASC,KAAMG,Q,aC5EvBwL,mBArEf,SAAgBrN,GAAQ,IAAD,EACOG,IAAMC,SAAS,IADtB,mBACdmL,EADc,KACN+B,EADM,OAESnN,IAAMC,UAAS,GAFxB,mBAEdqB,EAFc,KAELG,EAFK,KAIfqH,EAAOsE,aAAY,SAACC,GAAD,OAAWA,EAAMvE,QA0B1C,OAzBA9I,IAAMgD,WAAU,WACV8F,EAAKC,UACPoE,EAAUrE,EAAKC,SAAS3E,OAEzB,CAAC0E,IAsBF,qCACE,sBAAKzI,UAAU,oBAAf,UACE,qBAAKA,UAAU,OAAOe,QAPV,WAChBvB,EAAMe,QAAQC,KAAK,MAMf,SACE,sBAAKR,UAAU,kBAAf,UACE,oBAAIA,UAAU,aAAayE,MAAO,CAAEyF,aAAc,OAAlD,8CAGA,oBAAIlK,UAAU,aAAd,iCAGJ,qBAAKA,UAAU,UAAf,SACGyI,EAAKC,WAAaD,EAAKC,SAASuE,OAC/B,mCACE,cAAC,IAAD,CAAMC,GAAG,SAASlN,UAAU,WAA5B,kCAKF,qCACE,cAAC,IAAD,CAAMkN,GAAG,IAAIlN,UAAU,WAAvB,kBAGA,cAAC,IAAD,CAAMkN,GAAE,gBAAWnC,GAAU/K,UAAU,WAAvC,6CAIA,qBAAKe,QA9CI,WACnBzC,IACGS,IAAI,oBACJC,MAAK,WACJoC,GAAW,GACXa,YAAW,WACTb,GAAW,GACX5B,EAAMe,QAAQC,KAAK,OAClB,SAEJ4B,OAAM,SAACF,GACNzB,MAAMyB,EAAK,0IAmCuBlC,UAAU,WAAtC,8CAOR,cAACgB,EAAD,CAAQC,QAASA,EAASC,KAAM,4DCAvB2L,mBAhEf,SAAuBrN,GAAQ,IAAD,EACEG,IAAMC,UAAS,GADjB,mBACrBqB,EADqB,KACZG,EADY,KAGtBqH,EAAOsE,aAAY,SAACC,GAAD,OAAWA,EAAMvE,QAqB1C,OACE,qCACE,sBAAKzI,UAAU,oBAAf,UACE,qBAAKA,UAAU,OAAOe,QAPV,WAChBvB,EAAMe,QAAQC,KAAK,MAMf,SACE,sBAAKR,UAAU,kBAAf,UACE,oBAAIA,UAAU,aAAayE,MAAO,CAAEyF,aAAc,OAAlD,8CAGA,oBAAIlK,UAAU,aAAd,iCAGJ,qBAAKA,UAAU,UAAf,SACGyI,EAAKC,WAAaD,EAAKC,SAASuE,OAC/B,mCACE,cAAC,IAAD,CAAMC,GAAG,SAASlN,UAAU,WAA5B,kCAKF,qCACE,cAAC,IAAD,CAAMkN,GAAG,eAAelN,UAAU,WAAlC,gCAGA,cAAC,IAAD,CAAMkN,GAAE,WAAclN,UAAU,WAAhC,sCAIA,qBAAKe,QA9CI,WACnBzC,IACGS,IAAI,oBACJC,MAAK,WACJoC,GAAW,GACXa,YAAW,WACTb,GAAW,GACX5B,EAAMe,QAAQC,KAAK,OAClB,SAEJ4B,OAAM,SAACF,GACNzB,MAAMyB,EAAK,0IAmCuBlC,UAAU,WAAtC,8CAQR,cAACgB,EAAD,CAAQC,QAASA,EAASC,KAAM,4D,OC7DvBiM,OAJf,WACE,OAAO,wBAAQnN,UAAU,YCiBZ6M,oBAdf,SAAgBrN,GAAQ,IAAD,EACWG,IAAMC,SAAS,IAD1B,mBACdwN,EADc,KACJC,EADI,KAKrB,OAHA1N,IAAMgD,WAAU,WACd0K,EAAY7N,EAAM4M,SAASkB,YAC1B,CAAC9N,IAEF,qCACG4N,EAASG,SAAS,QAAU,cAAC,EAAD,IAAoB,cAAC,EAAD,IACjD,+BAAO/N,EAAMgO,WACb,cAAC,GAAD,UC6BSC,OAvCf,SAAcC,EAAmBC,GAA4B,IAApBC,EAAmB,uDAAN,KACpD,SAASC,EAAoBrO,GAC3B,IAAMiJ,EAAOsE,aAAY,SAACC,GAAD,OAAWA,EAAMvE,QADR,EAEJ9I,IAAMC,UAAS,GAFX,mBAE3BqB,EAF2B,KAElBG,EAFkB,KAG5B3B,EAAWC,cAsBjB,OArBAC,IAAMgD,WAAU,WACdlD,EAASZ,KAAQG,MAAK,SAACC,GAChBA,EAAIG,QAAQ6N,QASXW,IAAe3O,EAAIG,QAAQ0O,UAGd,IAAXH,IAFJnO,EAAMe,QAAQC,KAAK,KATjBmN,IACFvM,GAAW,GACXa,YAAW,WACTb,GAAW,GACX5B,EAAMe,QAAQC,KAAK,YAClB,YAYR,CAAChB,EAAOC,IAET,qCACE,cAACuB,EAAD,CACEC,QAASA,EACTC,KAAM,kIAER,cAACwM,EAAD,2BAAuBlO,GAAvB,IAA8BiJ,KAAMA,QAI1C,OAAOoF,GCLME,OAvBf,WACE,OACE,mCACE,cAAC,GAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWT,GAAKnK,EAAM,QAC5C,cAAC,IAAD,CAAO2K,KAAK,SAASC,UAAWT,GAAKlO,GAAO,KAC5C,cAAC,IAAD,CAAO0O,KAAK,YAAYC,UAAWT,GAAKtM,GAAU,KAClD,cAAC,IAAD,CAAO8M,KAAK,eAAeC,UAAWT,GAAKtG,GAAY,KACvD,cAAC,IAAD,CACE8G,KAAK,uBACLC,UAAWT,GAAKzE,GAAY,KAE9B,cAAC,IAAD,CAAOiF,KAAK,gBAAgBC,UAAWT,GAAK/D,EAAQ,QACpD,cAAC,IAAD,CAAOuE,KAAK,kBAAkBC,UAAWT,GAAKpD,GAAe,KAC7D,cAAC,IAAD,CAAO4D,KAAK,YAAYC,UAAWT,GAAKhD,GAAQ,KAChD,cAAC,IAAD,CAAOwD,KAAK,WAAWC,UAAWT,GAAKnB,GAAQ,a,sCC1BzD,IAIe6B,GAJKC,aAAgB,CAClC3F,KCMa,WAAqC,IAArBuE,EAAoB,uDAAZ,GAAIqB,EAAQ,uCACjD,OAAQA,EAAOlP,MACb,KAAKrB,EACH,OAAO,2BAAKkP,GAAZ,IAAmB1M,aAAc+N,EAAOjP,UAC1C,KAAKrB,EACH,OAAO,2BAAKiP,GAAZ,IAAmBsB,SAAUD,EAAOjP,UACtC,KAAKpB,EACH,OAAO,2BAAKgP,GAAZ,IAAmBtE,SAAU2F,EAAOjP,UACtC,KAAKnB,EACH,OAAO,eAAK+O,GACd,KAAK9O,EACH,OAAO,2BAAK8O,GAAZ,IAAmB/D,SAAUoF,EAAOjP,UACtC,KAAKjB,EACH,OAAO,2BAAK6O,GAAZ,IAAmBT,SAAU8B,EAAOjP,UACtC,KAAKhB,EACH,OAAO,2BAAK4O,GAAZ,IAAmB/D,SAAUoF,EAAOjP,UACtC,QACE,OAAO4N,MChBPuB,GAA4BC,aAChCC,KACAC,KAFgCF,CAGhCG,MAEFC,IAASC,OACP,cAAC,IAAD,CACEC,MAAOP,GACLQ,GACA5C,OAAO6C,8BACL7C,OAAO6C,gCAJb,SAOE,cAAC,IAAD,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,U","file":"static/js/main.0de2c368.chunk.js","sourcesContent":["export const LOGIN_USER = \"login_user\";\r\nexport const REGISTER_USER = \"register_user\";\r\nexport const AUTH_USER = \"auth_user\";\r\nexport const LOGOUT_USER = \"logout_user\";\r\nexport const SAVE_POST = \"save_post\";\r\nexport const SAVE_USER = \"save_user\";\r\nexport const GET_POST_BY_ID = \"get_post_by_id\";\r\n","import axios from \"axios\";\r\n\r\nconst { NODE_ENV } = process.env;\r\nconst PRODUCTION_BASE_URL = \"https://movie-tasters.herokuapp.com/\";\r\nconst DEVELOPMENT_BASE_URL = \"http://localhost:3000\";\r\n\r\nexport const baseURL =\r\n  NODE_ENV === \"production\" ? PRODUCTION_BASE_URL : DEVELOPMENT_BASE_URL;\r\n\r\nconst apiClient = axios.create({\r\n  baseURL,\r\n  withCredentials: true,\r\n  timeout: 3000,\r\n});\r\n\r\nexport default apiClient;\r\n","import {\r\n  LOGIN_USER,\r\n  REGISTER_USER,\r\n  AUTH_USER,\r\n  LOGOUT_USER,\r\n  SAVE_POST,\r\n  GET_POST_BY_ID,\r\n  SAVE_USER,\r\n} from \"./types\";\r\nimport apiClient from \"../apiClient\";\r\n\r\nconst USER_PATH = \"/api/user\";\r\nconst POST_PATH = \"/api/post\";\r\nexport function auth() {\r\n  const request = apiClient.get(`${USER_PATH}/auth`).then((res) => res.data);\r\n  return {\r\n    type: AUTH_USER,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function registerUser(data) {\r\n  const request = apiClient\r\n    .post(`${USER_PATH}/register`, data)\r\n    .then((res) => res.data);\r\n  return {\r\n    type: REGISTER_USER,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function loginUser(data) {\r\n  const request = apiClient\r\n    .post(`${USER_PATH}/login`, data)\r\n    .then((res) => res.data);\r\n  return {\r\n    type: LOGIN_USER,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function logoutUser() {\r\n  const request = apiClient.get(`${USER_PATH}/logout`).then((res) => res.data);\r\n  return {\r\n    type: LOGOUT_USER,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function savePost(data) {\r\n  const request = apiClient\r\n    .post(`${POST_PATH}/save`, data)\r\n    .then((res) => res.data);\r\n  return {\r\n    type: SAVE_POST,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function updateUser(data) {\r\n  const request = apiClient\r\n    .patch(`${USER_PATH}/update`, data)\r\n    .then((res) => res.data);\r\n  return {\r\n    type: SAVE_USER,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function getPostById(id) {\r\n  const request = apiClient\r\n    .get(`${POST_PATH}/post_by_id?id=${id}&type=single`)\r\n    .then((res) => res.data);\r\n  return {\r\n    type: GET_POST_BY_ID,\r\n    payload: request,\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { loginUser } from \"../../../_actions/user_action\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"./index.scss\";\r\n\r\nfunction Login(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [id, setId] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n\r\n  const idHandeler = function (e) {\r\n    setId(e.currentTarget.value);\r\n  };\r\n  const passwordHandeler = function (e) {\r\n    setPassword(e.currentTarget.value);\r\n  };\r\n  const submitHandler = function (e) {\r\n    e.preventDefault();\r\n    let body = {\r\n      id,\r\n      password,\r\n    };\r\n    dispatch(loginUser(body)).then((res) => {\r\n      if (!res.payload.loginSuccess) {\r\n        alert(res.payload.message);\r\n      } else {\r\n        props.history.push(\"/\");\r\n      }\r\n    });\r\n  };\r\n  const moveToRegister = function () {\r\n    props.history.push(\"/register\");\r\n  };\r\n  return (\r\n    <div className=\"login-area\">\r\n      <div className=\"login-box\">\r\n        <form onSubmit={submitHandler}>\r\n          <div className=\"id-form-box\">\r\n            <label className=\"id-label\" htmlFor=\"user_id\">\r\n              아이디 :\r\n            </label>\r\n            <input\r\n              className=\"id-input\"\r\n              type=\"text\"\r\n              id=\"user_id\"\r\n              value={id  || \"\"}\r\n              onChange={idHandeler}\r\n            />\r\n          </div>\r\n          <div className=\"password-form-box\">\r\n            <label className=\"password-label\" htmlFor=\"user_password\">\r\n              비밀번호 :\r\n            </label>\r\n            <input\r\n              className=\"password-input\"\r\n              type=\"password\"\r\n              id=\"user_password\"\r\n              value={password  || \"\"}\r\n              onChange={passwordHandeler}\r\n            />\r\n          </div>\r\n          <div className=\"button-box\">\r\n            <button className=\"login-button\" type=\"submit\">\r\n              로그인\r\n            </button>\r\n            <button className=\"register-button\" onClick={moveToRegister}>\r\n              회원가입\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport \"./notify.scss\";\r\n\r\nexport default function Notify(props) {\r\n  const visible = props.visible;\r\n  return (\r\n    <>\r\n      {visible ? (\r\n        <div className=\"notify-bg\">\r\n          <div className=\"notify-box\">{props.text}</div>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { registerUser } from \"../../../_actions/user_action\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Notify from \"../../utils/notify/Notify\";\r\nimport \"./index.scss\";\r\n\r\nfunction Register(props) {\r\n  const dispatch = useDispatch();\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [modalText, setModalText] = React.useState(\"\");\r\n  const [id, setId] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [name, setName] = React.useState(\"\");\r\n  const [nickname, setNickname] = React.useState(\"\");\r\n  const [birthYear, setBirthYear] = React.useState();\r\n  const [mbti, setMbti] = React.useState(\"\");\r\n\r\n  const idHandeler = function (e) {\r\n    setId(e.currentTarget.value);\r\n  };\r\n  const passwordHandeler = function (e) {\r\n    setPassword(e.currentTarget.value);\r\n  };\r\n  const nameHandeler = function (e) {\r\n    setName(e.currentTarget.value);\r\n  };\r\n  const nicknameHandeler = function (e) {\r\n    setNickname(e.currentTarget.value);\r\n  };\r\n  const birthHandeler = function (e) {\r\n    setBirthYear(e.currentTarget.value);\r\n  };\r\n  const mbtiHandeler = function (e) {\r\n    setMbti(e.currentTarget.value);\r\n  };\r\n  const submitHandler = function (e) {\r\n    e.preventDefault();\r\n    let body = {\r\n      id,\r\n      password,\r\n      name,\r\n      nickname,\r\n      birthYear,\r\n      mbti,\r\n    };\r\n    dispatch(registerUser(body))\r\n      .then((res) => {\r\n        if (res.payload.success) {\r\n          setModalText(\"회원가입이 완료되었습니다.\");\r\n          setVisible(true);\r\n          setTimeout(() => {\r\n            setVisible(false);\r\n            props.history.push(\"/login\");\r\n          }, 2500);\r\n        } else {\r\n          if (res.payload.err.keyPattern.id === 1) {\r\n            setModalText(\"중복된 아이디입니다.\");\r\n            setVisible(true);\r\n            setTimeout(() => {\r\n              setVisible(false);\r\n            }, 2500);\r\n            setId(\"\");\r\n          }\r\n          if (res.payload.err.keyPattern.nickname === 1) {\r\n            setModalText(\"중복된 닉네임입니다.\");\r\n            setVisible(true);\r\n            setTimeout(() => {\r\n              setVisible(false);\r\n            }, 2500);\r\n            setNickname(\"\");\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        alert(err, \"회원가입에 실패하였습니다. 관리자에게 문의하세요.\");\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"register-area\">\r\n      <div className=\"register-box\">\r\n        <form onSubmit={submitHandler}>\r\n          <div className=\"input-wrap\">\r\n            <label className=\"id-label\" htmlFor=\"user_name\">\r\n              이름 :\r\n            </label>\r\n            <input\r\n              className=\"id-input\"\r\n              type=\"text\"\r\n              id=\"user_name\"\r\n              value={name || \"\"}\r\n              onChange={nameHandeler}\r\n            />\r\n          </div>\r\n          <div className=\"input-wrap\">\r\n            <label className=\"id-label\" htmlFor=\"user_id\">\r\n              아이디 :\r\n            </label>\r\n            <input\r\n              className=\"id-input\"\r\n              type=\"text\"\r\n              id=\"user_id\"\r\n              value={id || \"\"}\r\n              onChange={idHandeler}\r\n              placeholder=\"5글자 이상\"\r\n            />\r\n          </div>\r\n          <div className=\"input-wrap\">\r\n            <label className=\"id-label\" htmlFor=\"user_password\">\r\n              비밀번호 :\r\n            </label>\r\n            <input\r\n              className=\"id-input\"\r\n              type=\"password\"\r\n              id=\"user_password\"\r\n              value={password || \"\"}\r\n              onChange={passwordHandeler}\r\n            />\r\n          </div>\r\n          <div className=\"input-wrap\">\r\n            <label className=\"id-label\" htmlFor=\"user_nickname\">\r\n              닉네임 :\r\n            </label>\r\n            <input\r\n              className=\"id-input\"\r\n              type=\"text\"\r\n              id=\"user_nickname\"\r\n              value={nickname || \"\"}\r\n              onChange={nicknameHandeler}\r\n              placeholder=\"7글자 이하\"\r\n            />\r\n          </div>\r\n          <div className=\"input-wrap\">\r\n            <label className=\"id-label\" htmlFor=\"user_birth\">\r\n              생년 :\r\n            </label>\r\n            <input\r\n              className=\"id-input\"\r\n              placeholder=\"네자리의 숫자만 입력(예: 1999)\"\r\n              type=\"text\"\r\n              id=\"user_birth\"\r\n              value={birthYear || \"\"}\r\n              onChange={birthHandeler}\r\n            />\r\n          </div>\r\n          <div className=\"input-wrap mb-50\">\r\n            <label className=\"id-label\" htmlFor=\"user_mbti\">\r\n              MBTI :\r\n            </label>\r\n            <input\r\n              className=\"id-input\"\r\n              placeholder=\"네자리의 소문자 입력(예: intp)\"\r\n              type=\"text\"\r\n              id=\"user_mbti\"\r\n              value={mbti || \"\"}\r\n              onChange={mbtiHandeler}\r\n            />\r\n          </div>\r\n          <div className=\"button-box\">\r\n            <button className=\"register-button\" type=\"submit\">\r\n              회원가입\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <Notify visible={visible} text={modalText} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","const genres = [\r\n  \"로맨틱코미디\",\r\n  \"로맨스\",\r\n  \"코미디\",\r\n  \"액션\",\r\n  \"스릴러\",\r\n  \"공포\",\r\n  \"공상과학(SF)\",\r\n  \"판타지\",\r\n  \"애니메이션\",\r\n  \"드라마\",\r\n  \"범죄\",\r\n];\r\n\r\nconst chartColor = [\r\n  \"#515F7A\",\r\n  \"#8290AC\",\r\n  \"#BCC7CC\",\r\n  \"#D5D9E0\",\r\n  \"#8C96A1\",\r\n  \"#A1A19C\",\r\n  \"#B1B1AC\",\r\n  \"#C1C0BB\",\r\n  \"#D0D0CA\",\r\n  \"#E0E0D5\",\r\n  \"#F0EFE2\",\r\n];\r\n\r\nexport { genres, chartColor };\r\n","import React from \"react\";\r\nimport { genres } from \"../genresArray\";\r\nimport \"./index.scss\";\r\n\r\nfunction GenreCheckbox(props) {\r\n  const [genre, setGenre] = React.useState([]);\r\n  React.useEffect(() => {\r\n    if (props.checkedGenre) {\r\n      props.handleFilter(genre);\r\n    } else {\r\n    }\r\n  }, [genre]);\r\n\r\n  const genreHandler = (checked, id) => {\r\n    props.setCheckedGenreTrue();\r\n    if (checked) {\r\n      setGenre([...genre, id]);\r\n    } else {\r\n      const checkedGenre = genre.filter((item) => {\r\n        return item !== id;\r\n      });\r\n      setGenre(checkedGenre);\r\n    }\r\n  };\r\n\r\n  const genreRender = genres.map((item, index) => {\r\n    return (\r\n      <div key={index} className=\"checkbox-box\">\r\n        <input\r\n          className=\"genre-checkbox\"\r\n          type=\"checkbox\"\r\n          id={item}\r\n          onChange={(e) => {\r\n            genreHandler(e.currentTarget.checked, item);\r\n          }}\r\n        />\r\n        <label className=\"genre-label\" htmlFor={item}>\r\n          {item}\r\n        </label>\r\n      </div>\r\n    );\r\n  });\r\n  return <div className=\"genre-checkbox-container\">{genreRender}</div>;\r\n}\r\n\r\nexport default GenreCheckbox;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/ko\";\r\nimport \"./index.scss\";\r\nimport GenreCheckbox from \"../../utils/genreCheckbox/GenreCheckbox\";\r\nimport apiClient from \"../../../apiClient\";\r\n\r\nfunction Main(props) {\r\n  const [postDatas, setPostDatas] = React.useState([]);\r\n  const [checkedGenre, setCheckedGenre] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    apiClient\r\n      .get(\"/api/post/getPost\")\r\n      .then((res) => {\r\n        if (res.data.success) {\r\n          setPostDatas(res.data.post);\r\n        }\r\n      })\r\n      .catch((err) => alert(err, \"포스트를 불러오는데 실패했소.\"));\r\n  }, []);\r\n\r\n  const setCheckedGenreTrue = function () {\r\n    setCheckedGenre(true);\r\n  };\r\n\r\n  const filteredPost = function (body) {\r\n    setCheckedGenre(true);\r\n    const filteredGenre = {\r\n      genre: body,\r\n    };\r\n    axios\r\n      .post(\"/api/post/findByGenre\", filteredGenre)\r\n      .then((res) => {\r\n        if (res.data.success) {\r\n          setPostDatas(res.data.post);\r\n        }\r\n      })\r\n      .catch((err) => alert(err, \"포스트를 불러오는데 실패했소.\"));\r\n  };\r\n\r\n  const renderPost = postDatas.map((post, index) => {\r\n    const date = moment(post.updatedAt).format(\"YYYY年 MM月 DD日\");\r\n    return (\r\n      <div className=\"post-container\" key={post._id}>\r\n        <div className=\"post-index\" key={post._id}>\r\n          {date}\r\n        </div>\r\n        <div\r\n          className=\"post-box\"\r\n          key={index}\r\n          onClick={() => props.history.push(`/post/${post._id}`)}\r\n        >\r\n          <div className=\"content-container\">\r\n            <div className=\"movie-post-title\">\r\n              \"\r\n              {post.postTitle.length > 14\r\n                ? `${post.postTitle.slice(0, 14)}···`\r\n                : post.postTitle}\r\n              \"\r\n            </div>\r\n            <div className=\"post-info\">\r\n              <span className=\"writer-nickname\">\r\n                ☞ {post.writer.nickname}님의\r\n              </span>\r\n              <span className=\"movie-movie-title\"> ⌜{post.movieTitle}⌟ </span>\r\n              <span className=\"writer-nickname\"> 포스팅</span>\r\n            </div>\r\n            <table\r\n              border=\"1\"\r\n              width=\"90%\"\r\n              height=\"auto\"\r\n              className=\"movie-info-table\"\r\n            >\r\n              <tbody>\r\n                <tr>\r\n                  <td\r\n                    align=\"center\"\r\n                    className=\"movie-director\"\r\n                    style={{ padding: \"5px\", width: \"90px\" }}\r\n                  >\r\n                    감독\r\n                  </td>\r\n                  <td className=\"movie-director\">{post.director.join(\", \")}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td\r\n                    align=\"center\"\r\n                    className=\"movie-actor\"\r\n                    style={{ padding: \"5px\", width: \"90px\" }}\r\n                  >\r\n                    배우\r\n                  </td>\r\n                  <td className=\"movie-actor\">\r\n                    {post.actor.length > 15\r\n                      ? `${post.actor.slice(0, 15)}···`\r\n                      : post.actor.join(\", \")}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td\r\n                    align=\"center\"\r\n                    className=\"movie-genre\"\r\n                    style={{ padding: \"5px\", width: \"90px\" }}\r\n                  >\r\n                    장르\r\n                  </td>\r\n                  <td className=\"movie-genre\">{post.genre}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div className=\"img-container\">\r\n            <div className=\"grey-noise\"></div>\r\n            <div className=\"grey-noise\"></div>\r\n            <div className=\"grey-noise\"></div>\r\n            <img\r\n              src={post.images[0]}\r\n              alt=\"movie-still-cut\"\r\n              className=\"movie-image\"\r\n            ></img>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"main-area\">\r\n      <GenreCheckbox\r\n        handleFilter={(genre) => filteredPost(genre)}\r\n        checkedGenre={checkedGenre}\r\n        setCheckedGenreTrue={setCheckedGenreTrue}\r\n      />\r\n      {postDatas.length > 0 ? (\r\n        <>{renderPost}</>\r\n      ) : (\r\n        <div className=\"no-post-area\">\r\n          <div className=\"no-post-box\">\r\n            <div className=\"no-post-text\">업로드된 포스트가 없습니다.</div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport axios from \"axios\";\r\n\r\nfunction FileUpload(props) {\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [image, setImage] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    if (props.prevImage) {\r\n      setImage(props.prevImage);\r\n      setLoading(false);\r\n    } else {\r\n      setImage([]);\r\n    }\r\n  }, [props.prevImage]);\r\n\r\n  const dropHandler = (files) => {\r\n    const formData = new FormData();\r\n    formData.append(\"upload_preset\", \"movieTasters\");\r\n    formData.append(\"file\", files[0]);\r\n    axios\r\n      .post(\r\n        \"https://api.cloudinary.com/v1_1/inthefuture/image/upload\",\r\n        formData\r\n      )\r\n      .then((res) => {\r\n        setLoading(false);\r\n        setImage(res.data.secure_url);\r\n        props.refreshFunction(res.data.secure_url);\r\n      })\r\n      .catch((err) => alert(err, \"파일을 저장하는데 실패했습니다.\"));\r\n  };\r\n\r\n  const deleteHandler = (image) => {\r\n    const currentIndex = image.indexOf(image);\r\n    let newImage = [...image];\r\n    newImage.splice(currentIndex, 1);\r\n    setImage(newImage);\r\n    setLoading(true);\r\n    props.refreshFunction(newImage);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        width: \"40%\",\r\n      }}\r\n    >\r\n      <Dropzone onDrop={dropHandler}>\r\n        {({ getRootProps, getInputProps }) => (\r\n          <div\r\n            style={{\r\n              height: 200,\r\n              border: \"1px solid #8c8c8c\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n            {...getRootProps()}\r\n          >\r\n            <i\r\n              className=\"fas fa-plus\"\r\n              style={{\r\n                fontSize: \"50px\",\r\n                color: \"rgb(114 114 114)\",\r\n              }}\r\n            ></i>\r\n            <input {...getInputProps()} />\r\n          </div>\r\n        )}\r\n      </Dropzone>\r\n      {loading ? (\r\n        <div style={{ border: \"1px solid #8c8c8c\" }}>\r\n          <h2\r\n            style={{\r\n              color: \"rgba(83, 83, 83, 0.5)\",\r\n              margin: \"80px auto\",\r\n              width: \"100px\",\r\n              height: \"40px\",\r\n              textAlign: \"center\",\r\n              backgroundColor: \"rgb(200, 200, 200, 0.4)\",\r\n            }}\r\n          >\r\n            . . .\r\n          </h2>\r\n        </div>\r\n      ) : (\r\n        <div\r\n          onClick={() => deleteHandler}\r\n          style={{\r\n            display: \"flex\",\r\n            height: \"100%\",\r\n            overflowX: \"scroll\",\r\n          }}\r\n        >\r\n          <img\r\n            style={{\r\n              minWidth: \"320px\",\r\n              height: \"100%\",\r\n            }}\r\n            src={image}\r\n            alt=\"movie stillcut\"\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FileUpload;\r\n","import React from \"react\";\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\nimport \"./index.scss\";\r\nimport { genres } from \"../../utils/genresArray\";\r\nimport Notify from \"../../utils/notify/Notify\";\r\nimport FileUpload from \"../../utils/fileUpload/FileUpload\";\r\nimport apiClient from \"../../../apiClient\";\r\n\r\nfunction PostUpload(props) {\r\n  const [notify, setNotify] = React.useState(\"\");\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [movieTitle, setMovieTitle] = React.useState(\"\");\r\n  const [postTitle, setPostTitle] = React.useState(\"\");\r\n  const [content, setContent] = React.useState(\"\");\r\n  const [genre, setGenre] = React.useState(\"\");\r\n  const [genreCount, setGenreCount] = React.useState(0);\r\n  const [director, setDirector] = React.useState([]);\r\n  const [actor, setActor] = React.useState([]);\r\n  const [images, setImages] = React.useState([]);\r\n\r\n  const movieTitleHandler = (e) => {\r\n    const currentValue = e.target.value;\r\n    setMovieTitle(currentValue);\r\n  };\r\n\r\n  const postTitleHandler = (e) => {\r\n    const currentValue = e.target.value;\r\n    setPostTitle(currentValue);\r\n  };\r\n\r\n  const directorHandler = (e) => {\r\n    const currentValue = e.target.value;\r\n    const directors = deleteSpace(currentValue);\r\n    setDirector(directors);\r\n  };\r\n\r\n  const actorHandler = (e) => {\r\n    const currentValue = e.target.value;\r\n    const actors = deleteSpace(currentValue);\r\n    setActor(actors);\r\n  };\r\n\r\n  const contentHandler = (e) => {\r\n    setContent(e);\r\n  };\r\n\r\n  const genreHandler = (checked, id) => {\r\n    if (checked) {\r\n      setGenre(id);\r\n      setGenreCount(genreCount + 1);\r\n    } else {\r\n      setGenreCount(genreCount - 1);\r\n    }\r\n  };\r\n\r\n  const genreRender = genres.map((item, index) => {\r\n    return (\r\n      <div key={index}>\r\n        <input\r\n          type=\"checkbox\"\r\n          id={item}\r\n          onChange={(e) => {\r\n            genreHandler(e.currentTarget.checked, item);\r\n          }}\r\n        />\r\n        <label htmlFor={item}>{item}</label>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  const deleteSpace = function (text) {\r\n    // const deleteSpace = text.replace(/(\\s*)/g, \"\");\r\n    const array = text.split(\",\");\r\n    return array;\r\n  };\r\n\r\n  const updateImage = (newImage) => {\r\n    setImages(newImage);\r\n  };\r\n\r\n  const savePosts = function () {\r\n    const post = {\r\n      writer: props.user.userData._id,\r\n      movieTitle,\r\n      postTitle,\r\n      content,\r\n      genre,\r\n      director,\r\n      actor,\r\n      images,\r\n    };\r\n    if (postTitle.length < 25) {\r\n      if (genreCount > 1) {\r\n        setNotify(\"하나의 장르만 선택 가능합니다.\");\r\n        setVisible(true);\r\n        setTimeout(() => {\r\n          setVisible(false);\r\n        }, 2500);\r\n      } else {\r\n        apiClient({\r\n          url: \"/api/post/save\",\r\n          method: \"post\",\r\n          data: post,\r\n        })\r\n          .then((res) => {\r\n            if (res.status === 200) {\r\n              setNotify(\"업로드가 완료되었습니다.\");\r\n              setVisible(true);\r\n              setTimeout(() => {\r\n                setVisible(false);\r\n                props.history.push(`/home/${props.user.userData._id}`);\r\n              }, 2500);\r\n            }\r\n          })\r\n          .catch((err) => console.log(err));\r\n      }\r\n    } else alert(\"포스트 제목의 최대 길이는 25글자입니다.\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"upload-area\">\r\n      <Notify visible={visible} text={notify} />\r\n      <div className=\"form-wrapper\">\r\n        <div className=\"upload-box\">\r\n          <table border=\"1\" width=\"55%\" className=\"movie-info-table\">\r\n            <tbody>\r\n              <tr>\r\n                <td align=\"center\" style={{ padding: \"5px\", width: \"90px\" }}>\r\n                  <label>포스트 제목</label>\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    className=\"post-title-input\"\r\n                    type=\"text\"\r\n                    placeholder=\"포스트 제목(25자 이하)\"\r\n                    name=\"post-title\"\r\n                    onChange={postTitleHandler}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td align=\"center\" style={{ padding: \"5px\", width: \"90px\" }}>\r\n                  <label>영화 제목</label>\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    className=\"movie-title-input\"\r\n                    type=\"text\"\r\n                    placeholder=\"영화 제목\"\r\n                    name=\"movie-title\"\r\n                    onChange={movieTitleHandler}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td align=\"center\" style={{ padding: \"5px\", width: \"90px\" }}>\r\n                  <label>감독</label>\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    className=\"director-input\"\r\n                    type=\"text\"\r\n                    placeholder=\"2명 이상일 경우 반점(,)으로 구분\"\r\n                    name=\"director\"\r\n                    onChange={directorHandler}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td align=\"center\" style={{ padding: \"5px\", width: \"90px\" }}>\r\n                  <label>배우</label>\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    className=\"actor-input\"\r\n                    type=\"text\"\r\n                    placeholder=\"2명 이상일 경우 반점(,)으로 구분\"\r\n                    name=\"actor\"\r\n                    onChange={actorHandler}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td align=\"center\" style={{ padding: \"5px\", width: \"90px\" }}>\r\n                  <label>장르</label>\r\n                </td>\r\n                <td style={{ padding: \"10px\" }}>\r\n                  <div className=\"genre-checkbox\">{genreRender}</div>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <FileUpload refreshFunction={updateImage} />\r\n        </div>\r\n        <CKEditor\r\n          editor={ClassicEditor}\r\n          data=\"<p>Hello from CKEditor 5!</p>\"\r\n          onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            contentHandler(data);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"button-container\">\r\n        <button className=\"submit-button\" onClick={savePosts}>\r\n          등록하기\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostUpload;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getPostById } from \"../../../_actions/user_action\";\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\nimport Notify from \"../../utils/notify/Notify\";\r\nimport FileUpload from \"../../utils/fileUpload/FileUpload\";\r\nimport { genres } from \"../../utils/genresArray\";\r\nimport \"./index.scss\";\r\n\r\nfunction PostUpdate(props) {\r\n  const dispatch = useDispatch();\r\n  const [notify, setNotify] = React.useState(\"\");\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [content, setContent] = React.useState(\"\");\r\n  const [postData, setPostData] = React.useState({\r\n    movieTitle: \"\",\r\n    postTitle: \"\",\r\n    genre: \"\",\r\n    actor: [],\r\n    director: [],\r\n    images: [],\r\n  });\r\n  const postId = props.match.params.postId;\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getPostById(postId)).then((res) => {\r\n      if (res.payload.success) {\r\n        setPostData(res.payload.post[0]);\r\n      }\r\n    });\r\n  }, [postId]);\r\n\r\n  const updateImage = (newImage) => {\r\n    postData.images = newImage;\r\n  };\r\n\r\n  const updatePosts = function () {\r\n    const updatedPost = {\r\n      postId,\r\n      writer: props.user.userData._id,\r\n      movieTitle: postData.movieTitle,\r\n      postTitle: postData.postTitle,\r\n      content: content,\r\n      genre: postData.genre,\r\n      director: postData.director,\r\n      actor: postData.actor,\r\n      images: postData.images,\r\n    };\r\n\r\n    if (postData.postTitle.length < 25) {\r\n      axios({\r\n        url: \"/api/post/update\",\r\n        method: \"put\",\r\n        data: updatedPost,\r\n      })\r\n        .then((res) => {\r\n          if (res.status === 200) {\r\n            setNotify(\"수정이 완료되었습니다.\");\r\n            setVisible(true);\r\n            setTimeout(() => {\r\n              setVisible(false);\r\n              props.history.push(`/home/${props.user.userData._id}`);\r\n            }, 2500);\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    } else alert(\"포스트 제목의 최대 길이는 25글자입니다.\");\r\n  };\r\n\r\n  //최종값 type이 array여야 하는 값들을 위한 handler\r\n  const arrayValueHandler = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    const text = deleteSpace(value);\r\n    setPostData({ ...postData, [name]: text });\r\n  };\r\n\r\n  const inputHandler = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    setPostData({ ...postData, [name]: value });\r\n  };\r\n\r\n  const contentHandler = (e) => {\r\n    setContent(e);\r\n  };\r\n\r\n  const genreRender = genres.map((item, index) => {\r\n    return (\r\n      <div key={index}>\r\n        <input\r\n          type=\"checkbox\"\r\n          id={item}\r\n          checked={postData.genre === item ? true : false}\r\n          readOnly\r\n        />\r\n        <label htmlFor={item}>{item}</label>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  const deleteSpace = function (text) {\r\n    // const deleteSpace = text.replace(/(\\s*)/g, \"\");\r\n    const array = text.split(\",\");\r\n    return array;\r\n  };\r\n\r\n  return (\r\n    <div className=\"upload-area\">\r\n      <Notify visible={visible} text={notify} />\r\n      <div className=\"form-wrapper\">\r\n        <div className=\"upload-box\">\r\n          <table border=\"1\" width=\"50%\" className=\"movie-info-table\">\r\n            <tbody>\r\n              <tr>\r\n                <td align=\"center\" style={{ padding: \"5px\", width: \"90px\" }}>\r\n                  <label>포스트 제목</label>\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    value={postData.postTitle || \"\"}\r\n                    className=\"post-title-input\"\r\n                    type=\"text\"\r\n                    placeholder=\"포스트 제목(25자 이하)\"\r\n                    name=\"postTitle\"\r\n                    onChange={inputHandler}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td align=\"center\" style={{ padding: \"5px\", width: \"90px\" }}>\r\n                  <label>영화 제목</label>\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    value={postData.movieTitle || \"\"}\r\n                    className=\"movie-title-input\"\r\n                    type=\"text\"\r\n                    placeholder=\"영화 제목\"\r\n                    name=\"movieTitle\"\r\n                    onChange={inputHandler}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td align=\"center\" style={{ padding: \"5px\", width: \"90px\" }}>\r\n                  <label>감독</label>\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    value={postData.director || \"\"}\r\n                    className=\"director-input\"\r\n                    type=\"text\"\r\n                    placeholder=\"2명 이상일 경우 반점(,)으로 구분\"\r\n                    name=\"director\"\r\n                    onChange={arrayValueHandler}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td align=\"center\" style={{ padding: \"5px\", width: \"90px\" }}>\r\n                  <label>배우</label>\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    value={postData.actor || \"\"}\r\n                    className=\"actor-input\"\r\n                    type=\"text\"\r\n                    placeholder=\"2명 이상일 경우 반점(,)으로 구분\"\r\n                    name=\"actor\"\r\n                    onChange={arrayValueHandler}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td align=\"center\" style={{ padding: \"5px\", width: \"90px\" }}>\r\n                  <label>장르</label>\r\n                </td>\r\n                <td style={{ padding: \"10px\" }}>\r\n                  <div className=\"genreCheckbox\">{genreRender}</div>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <FileUpload\r\n            refreshFunction={updateImage}\r\n            prevImage={postData.images}\r\n          />\r\n        </div>\r\n        <CKEditor\r\n          editor={ClassicEditor}\r\n          data={postData.content || \"\"}\r\n          onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            contentHandler(data);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"button-container\">\r\n        <button className=\"submit-button\" onClick={updatePosts}>\r\n          수정하기\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostUpdate;\r\n","import React from \"react\";\r\nimport ReactHtmlParser from \"html-react-parser\";\r\nimport \"./index.scss\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getPostById } from \"../../../_actions/user_action\";\r\n\r\nfunction Detail(props) {\r\n  const [resPost, setResPost] = React.useState([]);\r\n  const [actor, setActor] = React.useState([]);\r\n  const [open, setOpen] = React.useState(true);\r\n  const postId = props.match.params.postId;\r\n  const dispatch = useDispatch();\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getPostById(postId))\r\n      .then((res) => {\r\n        if (res.payload.success) {\r\n          setResPost(res.payload.post);\r\n          setActor(res.payload.post[0].actor);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n    return function cleanup() {\r\n      setOpen(false);\r\n    };\r\n  }, [postId]);\r\n\r\n  setTimeout(() => {\r\n    setOpen(false);\r\n  }, 7000);\r\n\r\n  const renderPost = resPost.map((post, index) => {\r\n    return (\r\n      <div className=\"post-detail-wrap\" key={index}>\r\n        <div className=\"detail-left-section\">\r\n          <div className=\"post-detail-title\">{post.postTitle}</div>\r\n        </div>\r\n        <div className=\"detail-right-section\">\r\n          <div className=\"detail-page-title\">제목: {post.movieTitle}</div>\r\n          <div className=\"detail-page-director\">감독: {post.director}</div>\r\n          <div className=\"detail-page-actor\">배우: {post.actor.join(\", \")}</div>\r\n          <div className=\"detail-page-genre\">장르: {post.genre}</div>\r\n          <div className=\"detail-page-content\">\r\n            {ReactHtmlParser(post.content)}\r\n          </div>\r\n          <div style={{ marginTop: \"100px\" }}>\r\n            <span className=\"detail-page-nickname\">\r\n              — {post.writer.nickname}\r\n            </span>\r\n            <span className=\"detail-page-posted-text\">님의 포스팅</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  const readerActor = actor.map((item) => {\r\n    return (\r\n      <div key={item._id} style={{ marginBottom: \"10px\" }}>\r\n        배우&emsp;{item.trim()}\r\n      </div>\r\n    );\r\n  });\r\n\r\n  const renderCredit = resPost.map((item) => {\r\n    return (\r\n      <div className=\"credit-text-box\" key={item._id}>\r\n        <div className=\"credit-title-text center\">{item.movieTitle}</div>\r\n        <div className=\"credit-text\">장르&emsp;{item.genre}</div>\r\n        <div className=\"credit-text\">감독&emsp;{item.director}</div>\r\n        <div className=\"credit-text\">{readerActor}</div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  if (!resPost) return null;\r\n  return (\r\n    <>\r\n      {open ? (\r\n        <div className=\"black-bg\">{renderCredit}</div>\r\n      ) : (\r\n        <div className=\"post-detail-area\">{renderPost}</div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Detail;\r\n","import React from \"react\";\r\n\r\nfunction MbtiRecommend() {\r\n  return <div>MbtiRecommend</div>;\r\n}\r\n\r\nexport default MbtiRecommend;\r\n","import React from \"react\";\r\nimport \"./modal.scss\";\r\n\r\nexport default function Modal({ open, close, handleClick, text }) {\r\n  return (\r\n    <>\r\n      {open ? (\r\n        <div className=\"modal-bg\">\r\n          <div className=\"modal-box\">\r\n            <div className=\"modal-text\">{text}</div>\r\n            <div className=\"button-box\">\r\n              <button className=\"no-button\" onClick={close}>\r\n                아니오\r\n              </button>\r\n              <button className=\"yes-button\" onClick={() => handleClick()}>\r\n                예\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./index.scss\";\r\nimport axios from \"axios\";\r\nimport ReactHtmlParser from \"html-react-parser\";\r\nimport DeleteModal from \"../../../utils/modal/Modal\";\r\nimport { PieChart } from \"react-minimal-pie-chart\";\r\nimport { chartColor } from \"../../../utils/genresArray\";\r\nimport apiClient from \"../../../../apiClient\";\r\n\r\nfunction MyHome(props) {\r\n  const [resPost, setResPost] = React.useState([]);\r\n  const [modalOpen, setModalOpen] = React.useState(false);\r\n  const [postId, setPostId] = React.useState(\"\");\r\n  const [chartValue, setChartValue] = React.useState([]);\r\n  const userId = props.match.params.id;\r\n  const chartGenreArray = [];\r\n\r\n  React.useEffect(() => {\r\n    apiClient\r\n      .get(`/api/post/getMyPost?id=${userId}&type=single`)\r\n      .then((res) => {\r\n        if (res.data.success) {\r\n          setResPost(res.data.post);\r\n          res.data.post.map((post) => {\r\n            return chartGenreArray.push(post.genre);\r\n          });\r\n          renderChartData(chartGenreArray);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const closeModal = function () {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  const deletePost = function () {\r\n    axios.delete(`/api/post/delete?postId=${postId}`).then((res) => {\r\n      if (res.data.success) {\r\n        closeModal();\r\n        window.location.replace(`/home/${userId}`);\r\n      } else {\r\n        alert(\"삭제를 실패하였습니다.\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const renderChartData = (genreArray) => {\r\n    const genreCount = genreArray.reduce((acc, cur) => {\r\n      const genreCount = acc[cur];\r\n      const count = genreCount || 0;\r\n      return {\r\n        ...acc,\r\n        [cur]: count + 1,\r\n      };\r\n    }, {});\r\n    const genreKeys = Object.keys(genreCount);\r\n    const colorCount = chartColor.slice(0, genreKeys.length);\r\n    const value = genreKeys.map((item, index) => ({\r\n      title: item,\r\n      value: genreCount[item],\r\n      color: colorCount[index],\r\n    }));\r\n    setChartValue(value);\r\n  };\r\n  const resMyPost = resPost.map((post) => {\r\n    return (\r\n      <div className=\"my-post-container\" key={post._id}>\r\n        <div className=\"my-post-box\">\r\n          <div className=\"my-post-title-box\">\r\n            <span className=\"my-post-title\">{post.postTitle}</span>\r\n            <div\r\n              className=\"my-post-edit-button\"\r\n              onClick={() => props.history.push(`/post-update/${post._id}`)}\r\n            >\r\n              수정\r\n            </div>\r\n            <div\r\n              className=\"my-post-delete-button\"\r\n              onClick={() => {\r\n                setPostId(post._id);\r\n                setModalOpen(true);\r\n              }}\r\n            >\r\n              삭제\r\n            </div>\r\n          </div>\r\n          <div className=\"my-post-movie-title\">제목: {post.movieTitle}</div>\r\n          <div className=\"my-post-director\">\r\n            감독: {post.director.join(\", \")}\r\n          </div>\r\n          <div className=\"my-post-actor\">배우: {post.actor.join(\", \")}</div>\r\n          <div className=\"my-post-genre\">장르: {post.genre}</div>\r\n          <div className=\"my-post-content\">{ReactHtmlParser(post.content)}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {resPost.length > 0 ? (\r\n        <div className=\"my-post-wrap\">\r\n          <div className=\"genre-chart-area\">\r\n            <div className=\"genre-chart-pie-btn\">\r\n              <i className=\"fas fa-chart-pie\"></i>\r\n              <div className=\"chart-text\">그래프</div>\r\n            </div>\r\n            <div className=\"genre-chart\">\r\n              <PieChart\r\n                label={(props) => props.dataEntry.title}\r\n                labelStyle={{ fontSize: \"6px\", fill: \"#ffffff\" }}\r\n                data={chartValue}\r\n              />\r\n            </div>\r\n          </div>\r\n          {resMyPost}\r\n          <DeleteModal\r\n            open={modalOpen}\r\n            close={closeModal}\r\n            handleClick={deletePost}\r\n            text={\"삭제하시겠습니까?\"}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div className=\"my-post-wrap\">\r\n          <div className=\"no-post-area\">\r\n            <div className=\"no-post-box\">\r\n              <div className=\"no-post-text\">업로드된 포스트가 없습니다.</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MyHome;\r\n","import React from \"react\";\r\nimport { updateUser } from \"../../../../_actions/user_action\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Notify from \"../../../utils/notify/Notify\";\r\nimport \"./index.scss\";\r\n\r\nfunction MyInfo(props) {\r\n  const dispatch = useDispatch();\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [modalText, setModalText] = React.useState(\"\");\r\n  const [userInfo, setUserInfo] = React.useState({});\r\n  const [newUserInfo, setNewUserInfo] = React.useState({});\r\n\r\n  React.useEffect(() => {\r\n    if (props.user.userData) {\r\n      setUserInfo(props.user.userData);\r\n    }\r\n  }, [props]);\r\n\r\n  const inputHandler = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    setUserInfo({ ...userInfo, [name]: value });\r\n    setNewUserInfo({ ...newUserInfo, [name]: value });\r\n  };\r\n\r\n  const submitHandler = function (e) {\r\n    e.preventDefault();\r\n    newUserInfo[\"_id\"] = userInfo._id;\r\n    dispatch(updateUser(newUserInfo))\r\n      .then((res) => {\r\n        if (res.payload.success) {\r\n          setModalText(\"회원 수정이 완료되었습니다.\");\r\n          setVisible(true);\r\n          setTimeout(() => {\r\n            setVisible(false);\r\n            window.location.replace(\"/my-info\");\r\n          }, 2500);\r\n        } else {\r\n          if (res.payload.err.keyPattern.id === 1) {\r\n            setModalText(\"중복된 아이디입니다.\");\r\n            setVisible(true);\r\n            setTimeout(() => {\r\n              setVisible(false);\r\n            }, 2500);\r\n            userInfo.id = \"\";\r\n          }\r\n          if (res.payload.err.keyPattern.nickname === 1) {\r\n            setModalText(\"중복된 닉네임입니다.\");\r\n            setVisible(true);\r\n            setTimeout(() => {\r\n              setVisible(false);\r\n            }, 2500);\r\n            userInfo.nickname = \"\";\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        alert(err, \"회원 수정에 실패하였습니다. 관리자에게 문의하세요.\");\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"register-area\">\r\n      <div className=\"register-box\">\r\n        <form onSubmit={submitHandler}>\r\n          <div className=\"input-wrap\">\r\n            <label className=\"id-label\" htmlFor=\"user_name\">\r\n              이름 :\r\n            </label>\r\n            <input\r\n              className=\"id-input\"\r\n              type=\"text\"\r\n              id=\"user_name\"\r\n              name=\"name\"\r\n              value={userInfo.name || \"\"}\r\n              onChange={inputHandler}\r\n            />\r\n          </div>\r\n          <div className=\"input-wrap\">\r\n            <label className=\"id-label\" htmlFor=\"user_id\">\r\n              아이디 :\r\n            </label>\r\n            <input\r\n              className=\"id-input\"\r\n              type=\"text\"\r\n              id=\"user_id\"\r\n              name=\"id\"\r\n              value={userInfo.id || \"\"}\r\n              onChange={inputHandler}\r\n              placeholder=\"5글자 이상\"\r\n            />\r\n          </div>\r\n          <div className=\"input-wrap\">\r\n            <label className=\"id-label\" htmlFor=\"user_password\">\r\n              비밀번호 :\r\n            </label>\r\n            <input\r\n              className=\"id-input\"\r\n              type=\"password\"\r\n              id=\"user_password\"\r\n              name=\"password\"\r\n              value={userInfo.password || \"\"}\r\n              onChange={inputHandler}\r\n            />\r\n          </div>\r\n          <div className=\"input-wrap\">\r\n            <label className=\"id-label\" htmlFor=\"user_nickname\">\r\n              닉네임 :\r\n            </label>\r\n            <input\r\n              className=\"id-input\"\r\n              type=\"text\"\r\n              id=\"user_nickname\"\r\n              name=\"nickname\"\r\n              value={userInfo.nickname || \"\"}\r\n              onChange={inputHandler}\r\n              placeholder=\"7글자 이하\"\r\n            />\r\n          </div>\r\n          <div className=\"input-wrap\">\r\n            <label className=\"id-label\" htmlFor=\"user_birth\">\r\n              생년 :\r\n            </label>\r\n            <input\r\n              className=\"id-input\"\r\n              placeholder=\"네자리의 숫자만 입력(예: 1999)\"\r\n              type=\"text\"\r\n              id=\"user_birth\"\r\n              name=\"birthYear\"\r\n              value={userInfo.birthYear || \"\"}\r\n              onChange={inputHandler}\r\n            />\r\n          </div>\r\n          <div className=\"input-wrap mb-50\">\r\n            <label className=\"id-label\" htmlFor=\"user_mbti\">\r\n              MBTI :\r\n            </label>\r\n            <input\r\n              className=\"id-input\"\r\n              placeholder=\"네자리의 소문자 입력(예: intp)\"\r\n              type=\"text\"\r\n              id=\"user_mbti\"\r\n              name=\"mbti\"\r\n              value={userInfo.mbti || \"\"}\r\n              onChange={inputHandler}\r\n            />\r\n          </div>\r\n          <div className=\"button-box\">\r\n            <button className=\"register-button\" type=\"submit\">\r\n              수정\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <Notify visible={visible} text={modalText} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyInfo;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Notify from \"../../utils/notify/Notify\";\r\nimport \"./index.scss\";\r\n\r\nfunction Header(props) {\r\n  const [userId, setUserId] = React.useState(\"\");\r\n  const [visible, setVisible] = React.useState(false);\r\n\r\n  const user = useSelector((state) => state.user);\r\n  React.useEffect(() => {\r\n    if (user.userData) {\r\n      setUserId(user.userData._id);\r\n    }\r\n  }, [user]);\r\n\r\n  const handleLogout = function () {\r\n    axios\r\n      .get(\"/api/user/logout\")\r\n      .then(() => {\r\n        setVisible(true);\r\n        setTimeout(() => {\r\n          setVisible(false);\r\n          props.history.push(\"/\");\r\n        }, 2500);\r\n      })\r\n      .catch((err) => {\r\n        alert(err, \"로그아웃에 실패했습니다. 관리자에게 문의하세요\");\r\n      });\r\n  };\r\n\r\n  const urlToHome = function () {\r\n    props.history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"nav-bar-container\">\r\n        <div className=\"test\" onClick={urlToHome}>\r\n          <div className=\"title-container\">\r\n            <h1 className=\"main-title\" style={{ marginBottom: \"5px\" }}>\r\n              :영화 미식가\r\n            </h1>\r\n            <h1 className=\"main-title\">:Movie Tasters</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"nav-bar\">\r\n          {user.userData && !user.userData.isAuth ? (\r\n            <>\r\n              <Link to=\"/login\" className=\"nav-link\">\r\n                로그인\r\n              </Link>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                Home\r\n              </Link>\r\n              <Link to={`/home/${userId}`} className=\"nav-link\">\r\n                나의 페이지\r\n              </Link>\r\n              {/* <Link to=\"/post-upload\">Post Upload</Link> */}\r\n              <div onClick={handleLogout} className=\"nav-link\">\r\n                로그아웃\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <Notify visible={visible} text={\"로그아웃됐습니다.\"} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Notify from \"../../utils/notify/Notify\";\r\nimport \"./index.scss\";\r\n\r\nfunction HeaderForHome(props) {\r\n  const [visible, setVisible] = React.useState(false);\r\n\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const handleLogout = function () {\r\n    axios\r\n      .get(\"/api/user/logout\")\r\n      .then(() => {\r\n        setVisible(true);\r\n        setTimeout(() => {\r\n          setVisible(false);\r\n          props.history.push(\"/\");\r\n        }, 2500);\r\n      })\r\n      .catch((err) => {\r\n        alert(err, \"로그아웃에 실패했습니다. 관리자에게 문의하세요\");\r\n      });\r\n  };\r\n\r\n  const urlToHome = function () {\r\n    props.history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"nav-bar-container\">\r\n        <div className=\"test\" onClick={urlToHome}>\r\n          <div className=\"title-container\">\r\n            <h1 className=\"main-title\" style={{ marginBottom: \"5px\" }}>\r\n              :영화 미식가\r\n            </h1>\r\n            <h1 className=\"main-title\">:Movie Tasters</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"nav-bar\">\r\n          {user.userData && !user.userData.isAuth ? (\r\n            <>\r\n              <Link to=\"/login\" className=\"nav-link\">\r\n                로그인\r\n              </Link>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Link to=\"/post-upload\" className=\"nav-link\">\r\n                업로드\r\n              </Link>\r\n              <Link to={`/my-info`} className=\"nav-link\">\r\n                정보수정\r\n              </Link>\r\n              {/* <Link to=\"/post-upload\">Post Upload</Link> */}\r\n              <div onClick={handleLogout} className=\"nav-link\">\r\n                로그아웃\r\n              </div>\r\n            </>\r\n          )}\r\n          {/* <div className=\"line-animation\"></div> */}\r\n        </div>\r\n      </div>\r\n      <Notify visible={visible} text={\"로그아웃됐습니다.\"} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(HeaderForHome);\r\n","import React from \"react\";\r\nimport \"./index.scss\";\r\nfunction Footer() {\r\n  return <footer className=\"footer\"></footer>;\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Header from \"./header/Header\";\r\nimport HeaderForHome from \"./header/HeaderForHome\";\r\nimport Footer from \"./footer/Footer\";\r\n\r\nfunction Layout(props) {\r\n  const [pathName, setPathName] = React.useState(\"\");\r\n  React.useEffect(() => {\r\n    setPathName(props.location.pathname);\r\n  }, [props]);\r\n  return (\r\n    <>\r\n      {pathName.includes(\"home\") ? <HeaderForHome /> : <Header />}\r\n      <main>{props.children}</main>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(Layout);\r\n","import React from \"react\";\r\nimport { auth } from \"../_actions/user_action\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Notify from \"../components/utils/notify/Notify\";\r\n\r\nfunction Auth(SpecificComponent, option, adminRoute = null) {\r\n  function AuthenticationCheck(props) {\r\n    const user = useSelector((state) => state.user);\r\n    const [visible, setVisible] = React.useState(false);\r\n    const dispatch = useDispatch();\r\n    React.useEffect(() => {\r\n      dispatch(auth()).then((res) => {\r\n        if (!res.payload.isAuth) {\r\n          if (option) {\r\n            setVisible(true);\r\n            setTimeout(() => {\r\n              setVisible(false);\r\n              props.history.push(\"/login\");\r\n            }, 2500);\r\n          }\r\n        } else {\r\n          if (adminRoute && !res.payload.isAdmin) {\r\n            props.history.push(\"/\");\r\n          } else {\r\n            if (option === false) {\r\n              props.history.push(\"/\");\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }, [props, dispatch]);\r\n    return (\r\n      <>\r\n        <Notify\r\n          visible={visible}\r\n          text={\"로그인이 필요합니다. 로그인창으로 이동합니다.\"}\r\n        />\r\n        <SpecificComponent {...props} user={user} />\r\n      </>\r\n    );\r\n  }\r\n  return AuthenticationCheck;\r\n}\r\n\r\nexport default Auth;\r\n","import { Route, Switch } from \"react-router-dom\";\nimport Login from \"./components/views/Login/Login\";\nimport Register from \"./components/views/Register/Register\";\nimport Main from \"./components/views/Main/Main\";\nimport PostUpload from \"./components/views/PostUpload/PostUpload\";\nimport PostUpdate from \"./components/views/PostUpdate/PostUpdate\";\nimport Detail from \"./components/views/Detail/Detail\";\nimport MbtiRecommend from \"./components/views/MbtiRecommend/MbtiRecommend\";\nimport MyHome from \"./components/views/aboutMember/myHome/myHome\";\nimport MyInfo from \"./components/views/aboutMember/myInfo/MyInfo\";\nimport Layout from \"./components/layout/Layout\";\nimport Auth from \"./hoc/Auth\";\n\nfunction App() {\n  return (\n    <>\n      <Layout>\n        <Switch>\n          <Route exact path=\"/\" component={Auth(Main, null)} />\n          <Route path=\"/login\" component={Auth(Login, false)} />\n          <Route path=\"/register\" component={Auth(Register, false)} />\n          <Route path=\"/post-upload\" component={Auth(PostUpload, true)} />\n          <Route\n            path=\"/post-update/:postId\"\n            component={Auth(PostUpdate, true)}\n          />\n          <Route path=\"/post/:postId\" component={Auth(Detail, null)} />\n          <Route path=\"/mbti-recommend\" component={Auth(MbtiRecommend, true)} />\n          <Route path=\"/home/:id\" component={Auth(MyHome, true)} />\n          <Route path=\"/my-info\" component={Auth(MyInfo, true)} />\n        </Switch>\n      </Layout>\n    </>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport user from \"./user_reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  user,\r\n});\r\n\r\nexport default rootReducer;\r\n","import {\r\n  LOGIN_USER,\r\n  REGISTER_USER,\r\n  AUTH_USER,\r\n  LOGOUT_USER,\r\n  SAVE_POST,\r\n  GET_POST_BY_ID,\r\n  SAVE_USER,\r\n} from \"../_actions/types\";\r\n\r\nexport default function filter(state = {}, action) {\r\n  switch (action.type) {\r\n    case LOGIN_USER:\r\n      return { ...state, loginSuccess: action.payload };\r\n    case REGISTER_USER:\r\n      return { ...state, register: action.payload };\r\n    case AUTH_USER:\r\n      return { ...state, userData: action.payload };\r\n    case LOGOUT_USER:\r\n      return { ...state };\r\n    case SAVE_POST:\r\n      return { ...state, postData: action.payload };\r\n    case SAVE_USER:\r\n      return { ...state, userInfo: action.payload };\r\n    case GET_POST_BY_ID:\r\n      return { ...state, postData: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport promiseMiddleware from \"redux-promise\";\nimport reduxThunk from \"redux-thunk\";\nimport Reducer from \"./_reducers\";\n\nconst createStoreWithMiddelware = applyMiddleware(\n  promiseMiddleware,\n  reduxThunk\n)(createStore);\n\nReactDOM.render(\n  <Provider\n    store={createStoreWithMiddelware(\n      Reducer,\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__()\n    )}\n  >\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}